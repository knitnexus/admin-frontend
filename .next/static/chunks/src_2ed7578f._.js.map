{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Dashboard/ImagePreview.tsx"],"sourcesContent":["// ImagePreview.tsx\nimport React from \"react\";\nimport Image from \"next/image\";\n\ninterface ImagePreviewProps {\n    file: File;\n    onRemove: () => void;\n    size?: string; // Tailwind size, e.g. \"w-32 h-32\"\n}\n\nexport default function ImagePreview({ file, onRemove, size = \"w-32 h-32\" }: ImagePreviewProps) {\n    return (\n        <div className={`relative group ${size}`}>\n            {/* Image */}\n            <Image\n                width={32}\n                height={32}\n                src={URL.createObjectURL(file)}\n                alt={\"Preview\"}\n                className={`rounded-lg border object-cover transition duration-300 group-hover:blur-sm ${size}`}\n            ></Image>\n\n\n            {/* Overlay */}\n            <div\n                className=\"absolute inset-0 flex items-center justify-center\n                   text-white text-sm font-medium\n                   bg-black/40 opacity-0 group-hover:opacity-100\n                   rounded-lg cursor-pointer transition duration-300\"\n                onClick={onRemove}\n            >\n                Remove\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;AAEnB;;;AAQe,SAAS,aAAa,KAAyD;QAAzD,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,WAAW,EAAqB,GAAzD;IACjC,qBACI,6LAAC;QAAI,WAAW,AAAC,kBAAsB,OAAL;;0BAE9B,6LAAC,2IAAK;gBACF,OAAO;gBACP,QAAQ;gBACR,KAAK,IAAI,eAAe,CAAC;gBACzB,KAAK;gBACL,WAAW,AAAC,8EAAkF,OAAL;;;;;;0BAK7F,6LAAC;gBACG,WAAU;gBAIV,SAAS;0BACZ;;;;;;;;;;;;AAKb;KAzBwB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/CompanyStep.tsx"],"sourcesContent":["// app/dashboard/onboard-company/components/CompanyStep.tsx\n\"use client\";\n\nimport React, { ChangeEvent, useState } from \"react\";\nimport ImagePreview from \"@/components/Dashboard/ImagePreview\";\n\ntype LocationData = {\n    latitude: number;\n    longitude: number;\n};\n\ninterface FormProps {\n    name: string;\n    contactNumber: string;\n    gstNumber: string;\n    aboutCompany: string;\n    workType: string;\n    unitType: string;\n    unitSqFeet: string;\n    certifications: string[];\n    companyLogo: File | null;\n    unitImages: File[];\n    location: LocationData | null;\n}\n\ntype Props = {\n    form: FormProps;\n    setForm: (updates: Partial<FormProps>) => void;\n    onNext: () => void;\n};\n\nconst availableCertifications = [\n    \"Import Export Certificate\",\n    \"ISO 9001\",\n    \"GOTS\",\n    \"Fair Trade\",\n    \"OEKO-TEX\",\n    \"SA8000\",\n    \"RCS\",\n    \"BCI Cotton\",\n    \"Sedex\",\n    \"OCS\",\n    \"GRS\",\n];\n\nconst workTypes = [\"DOMESTIC_WORK\", \"EXPORT_WORK\"];\nconst unitTypes = [\n    \"YARN_SPINNING\",\n    \"YARN_PROCESSING\",\n    \"WEAVING_UNIT\",\n    \"KNITTING_UNIT\",\n    \"DYEING_UNIT\",\n    \"FABRIC_PROCESSING_UNIT\",\n    \"FABRIC_FINISHING_UNIT\",\n    \"WASHING_UNIT\",\n    \"CUTTING_UNIT\",\n    \"COMPUTERIZED_EMBROIDERY_UNIT\",\n    \"MANUAL_EMBROIDERY_UNIT\",\n    \"FUSING_UNIT\",\n    \"PRINTING_UNIT\",\n    \"STITCHING_UNIT\",\n    \"CHECKING_UNIT\",\n    \"IRONING_PACKING_UNIT\",\n    \"KAJA_BUTTON_UNIT\",\n    \"MULTI_NEEDLE_DOUBLE_CHAIN_UNIT\",\n    \"OIL_REMOVING_MENDING_CENTER\",\n    \"PATTERN_MAKING_CENTER\",\n    \"FILM_SCREEN_MAKING_CENTER\",\n];\n\nexport default function CompanyStep({ form, setForm, onNext }: Props) {\n    const [errors, setErrors] = useState<Partial<Record<keyof FormProps, string>>>({});\n\n    const validate = () => {\n\n        const errs: typeof errors = {};\n        if (!form.name.trim()) errs.name = \"Company name is required\";\n        if (!form.contactNumber.trim()) errs.contactNumber = \"Contact number required\";\n        if (!form.unitType.trim()) errs.unitType = \"Unit Type required\";\n        if (!form.workType.trim()) errs.workType = \"Work Type required\";\n        const sq = Number(form.unitSqFeet);\n        if (isNaN(sq) || sq <= 0) errs.unitSqFeet = \"Unit sq feet must be positive\";\n\n        if (!form.location) errs.location = \"Location is required\";\n\n        setErrors(errs);\n        return Object.keys(errs).length === 0;\n    };\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        const { name, value } = e.target;\n        setForm({\n            [name]: value,\n        } as Partial<FormProps>);\n\n        setErrors((prev) => ({ ...prev, [name]: undefined }));\n    };\n\n    const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, files } = e.target;\n        if (!files) return;\n        if (name === \"companyLogo\") {\n            setForm({ companyLogo: files[0] });\n        } else if (name === \"unitImages\") {\n            setForm({ unitImages: Array.from(files) });\n        }\n    };\n\n    function handleCertToggle(cert: string) {\n        // Ensure form.certifications exists and is array\n        const certs = form.certifications ?? [];\n        const has = certs.includes(cert);\n\n        const newCerts = has\n            ? certs.filter((c) => c !== cert)\n            : [...certs, cert];\n\n        // Pass the object directly to setForm, not a function\n        setForm({ certifications: newCerts });\n    }\n    const handlePickLocation = () => {\n        if (!navigator.geolocation) {\n            alert(\"Geolocation not supported\");\n            return;\n        }\n        navigator.geolocation.getCurrentPosition(\n            (pos) => {\n                setForm({ location: { latitude: pos.coords.latitude, longitude: pos.coords.longitude } });\n                setErrors((prev) => ({ ...prev, location: undefined }));\n            },\n            (err) => {\n                console.error(\"Location error\", err);\n                alert(\"Could not fetch location\");\n            }\n        );\n    };\n\n    const onNextClicked = () => {\n        if (validate()) {\n            onNext();\n        }\n    };\n\n    return (\n        <div className=\"max-w-4xl mx-auto bg-white rounded-xl shadow-lg p-8\">\n            <div className=\"mb-8\">\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">Company Information</h2>\n                <p className=\"text-gray-600\">Tell us about your company and manufacturing capabilities</p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {/* Company Name */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Company Name <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        name=\"name\"\n                        value={form.name}\n                        onChange={handleChange}\n                        placeholder=\"Enter your company name\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.name && (\n                        <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                            </svg>\n                            {errors.name}\n                        </p>\n                    )}\n                </div>\n\n                {/* Contact Number */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Contact Number <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        name=\"contactNumber\"\n                        value={form.contactNumber}\n                        onChange={handleChange}\n                        placeholder=\"Enter contact number\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.contactNumber && (\n                        <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                            </svg>\n                            {errors.contactNumber}\n                        </p>\n                    )}\n                </div>\n\n                {/* GST Number */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">GST Number</label>\n                    <input\n                        name=\"gstNumber\"\n                        value={form.gstNumber}\n                        onChange={handleChange}\n                        placeholder=\"Enter GST number (optional)\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                </div>\n\n                {/* Unit Sq Feet */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Unit Area (Sq Feet) <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        name=\"unitSqFeet\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={form.unitSqFeet}\n                        onChange={handleChange}\n                        placeholder=\"Enter unit area in square feet\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.unitSqFeet && (\n                        <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                            </svg>\n                            {errors.unitSqFeet}\n                        </p>\n                    )}\n                </div>\n\n                {/* Unit Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Unit Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        name=\"unitType\"\n                        value={form.unitType}\n                        onChange={handleChange}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors bg-white\"\n                    >\n                        <option value=\"\">Select your unit type</option>\n                        {unitTypes.map((u) => (\n                            <option key={u} value={u}>\n                                {u.replace(/_/g, ' ')}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.unitType && (\n                        <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                            </svg>\n                            {errors.unitType}\n                        </p>\n                    )}\n                </div>\n\n                {/* Work Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Work Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        name=\"workType\"\n                        value={form.workType}\n                        onChange={handleChange}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors bg-white\"\n                    >\n                        <option value=\"\">Select work type</option>\n                        {workTypes.map((w) => (\n                            <option key={w} value={w}>\n                                {w.replace(/_/g, ' ')}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.workType && (\n                        <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                            </svg>\n                            {errors.workType}\n                        </p>\n                    )}\n                </div>\n            </div>\n\n            {/* About Company - Full Width */}\n            <div className=\"mt-8 space-y-2\">\n                <label className=\"block text-sm font-semibold text-gray-700\">About Company</label>\n                <textarea\n                    name=\"aboutCompany\"\n                    value={form.aboutCompany}\n                    onChange={handleChange}\n                    placeholder=\"Tell us about your company, manufacturing capabilities, and experience...\"\n                    rows={4}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-vertical\"\n                />\n            </div>\n\n            {/* Certifications */}\n            {form.workType==\"EXPORT_WORK\"&&\n            <div className=\"mt-8 space-y-4\">\n                <label className=\"block text-sm font-semibold text-gray-700\">\n                    Certifications & Standards\n                </label>\n                <p className=\"text-sm text-gray-500\">Select all certifications your company holds</p>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                    {availableCertifications.map((cert) => (\n                        <label key={cert} className=\"flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\">\n                            <input\n                                type=\"checkbox\"\n                                checked={form.certifications?.includes(cert) ?? false}\n                                onChange={() => handleCertToggle(cert)}\n                                className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"\n                            />\n                            <span className=\"text-sm text-gray-700 font-medium\">{cert}</span>\n                        </label>\n                    ))}\n                </div>\n            </div>\n            }\n            {/* File Uploads */}\n            <div className=\"mt-8 grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {/* Company Logo */}\n\n                <div className=\"space-y-2\">\n\n\n                    {/*Handling image upload*/}\n                    <label className=\"block text-sm font-semibold text-gray-700\">Company Logo</label>\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-blue-400 transition-colors\">\n                        <input\n                            type=\"file\"\n                            name=\"companyLogo\"\n\n                            accept=\"image/*\"\n                            onChange={handleFileChange}\n                            className=\"w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                        />\n                        <p className=\"mt-2 text-xs text-gray-500\">PNG, JPG up to 2MB</p>\n                    </div>\n                    {form.companyLogo && (\n                        <div className=\"mt-4\">\n                            <ImagePreview\n                                size=\"w-24 h-24\"\n                                file={form.companyLogo}\n                                onRemove={() => setForm({ ...form, companyLogo: null })}\n                            />\n                        </div>\n                    )}\n                </div>\n\n                {/* Unit Images */}\n                <div className=\"space-y-2\">\n                    {/*preview images */}\n\n                    {/*handliing image upload */}\n                    <label className=\"block text-sm font-semibold text-gray-700\">Unit Images</label>\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-blue-400 transition-colors\">\n                        <input\n                            type=\"file\"\n                            name=\"unitImages\"\n                            accept=\"image/*\"\n                            multiple\n                            onChange={handleFileChange}\n                            className=\"w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                        />\n                        <p className=\"mt-2 text-xs text-gray-500\">Multiple images, PNG or JPG up to 5MB </p>\n                    </div>\n                    {form.unitImages?.length > 0 && (\n                        <div className=\"mt-4 grid grid-cols-3 gap-2\">\n                            {form.unitImages.map((file, idx) => (\n                                <ImagePreview\n                                    key={idx}\n                                    file={file}\n                                    size=\"w-24 h-24\"\n                                    onRemove={() => {\n                                        const updated = form.unitImages.filter((_, i) => i !== idx);\n                                        setForm({ ...form, unitImages: updated });\n                                    }}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </div>\n\n            </div>\n\n            {/* Location */}\n            <div className=\"mt-8 space-y-4\">\n                <label className=\"block text-sm font-semibold text-gray-700\">\n                    Location <span className=\"text-red-500\">*</span>\n                </label>\n                <div className=\"flex items-center gap-4\">\n                    <button\n                        type=\"button\"\n                        onClick={handlePickLocation}\n                        className=\"flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all transform hover:scale-105\"\n                    >\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        </svg>\n                        Pick Current Location\n                    </button>\n                    {form.location && (\n                        <div className=\"flex items-center gap-2 px-4 py-2 bg-green-50 border border-green-200 rounded-lg\">\n                            <svg className=\"w-4 h-4 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                            </svg>\n                            <span className=\"text-sm text-green-700 font-medium\">\n                            Location: {form.location.latitude.toFixed(6)}, {form.location.longitude.toFixed(6)}\n                        </span>\n                        </div>\n                    )}\n                </div>\n                {errors.location && (\n                    <p className=\"text-sm text-red-500 flex items-center gap-1\">\n                        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                        </svg>\n                        {errors.location}\n                    </p>\n                )}\n            </div>\n\n            {/* Next Button */}\n            <div className=\"flex justify-end mt-12 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onNextClicked}\n                    className=\"flex items-center gap-2 px-8 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all transform hover:scale-105 font-semibold shadow-lg\"\n                >\n                    Continue to Next Step\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1057, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Common/MultiEnumSelect.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ntype AllowedType = string | number;\n\ninterface MultiEnumSelectProps<T extends AllowedType> {\n    label: string;\n    options: T[];\n    value: T[];\n    onChange: (newValue: T[]) => void;\n}\n\nexport function MultiEnumSelect<T extends AllowedType>({\n                                                           label,\n                                                           options,\n                                                           value,\n                                                           onChange,\n                                                       }: MultiEnumSelectProps<T>) {\n    const [input, setInput] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleAdd = (item: T) => {\n        if (!value.includes(item)) {\n            onChange([...value, item]);\n        }\n        setInput(\"\");\n        setIsOpen(false);\n    };\n\n    const handleRemove = (item: T) => {\n        onChange(value.filter((v) => v !== item));\n    };\n\n    // Filter based on input, but show all when input is empty\n    const filteredOptions = options.filter(\n        (opt) =>\n            opt.toString().toLowerCase().includes(input.toLowerCase()) &&\n            !value.includes(opt)\n    );\n\n    return (\n        <div className=\"space-y-2 relative\">\n            <label className=\"block text-sm font-semibold text-gray-700\">{label}</label>\n\n            {/* Selected chips */}\n            <div className=\"flex flex-wrap gap-2 mb-2\">\n                {value.map((item) => (\n                    <span\n                        key={item.toString()}\n                        className=\"flex items-center gap-1 bg-blue-100 text-blue-800 px-2 py-1 rounded-lg text-sm\"\n                    >\n            {item}\n                        <button\n                            type=\"button\"\n                            onClick={() => handleRemove(item)}\n                            className=\"text-red-500 hover:text-red-700\"\n                        >\n              ×\n            </button>\n          </span>\n                ))}\n            </div>\n\n            {/* Input */}\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => {\n                    setInput(e.target.value);\n                    setIsOpen(true);\n                }}\n                onFocus={() => setIsOpen(true)}\n                onBlur={() => setTimeout(() => setIsOpen(false), 150)} // delay to allow click\n                placeholder=\"Type or select...\"\n                className=\"w-full border px-3 py-2 rounded-lg\"\n            />\n\n            {/* Dropdown */}\n            {isOpen && (\n                <ul className=\"absolute z-10 w-full border rounded-lg mt-1 bg-white shadow max-h-40 overflow-y-auto\">\n                    {filteredOptions.map((opt) => (\n                        <li\n                            key={opt.toString()}\n                            onClick={() => handleAdd(opt)}\n                            className=\"px-3 py-2 hover:bg-blue-100 cursor-pointer\"\n                        >\n                            {opt}\n                        </li>\n                    ))}\n                    {filteredOptions.length === 0 && (\n                        <li className=\"px-3 py-2 text-gray-400\">No matches</li>\n                    )}\n                </ul>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;AAWO,SAAS,gBAAuC,KAK0B;QAL1B,EACI,KAAK,EACL,OAAO,EACP,KAAK,EACL,QAAQ,EACc,GAL1B;;IAMnD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC;IAErC,MAAM,YAAY,CAAC;QACf,IAAI,CAAC,MAAM,QAAQ,CAAC,OAAO;YACvB,SAAS;mBAAI;gBAAO;aAAK;QAC7B;QACA,SAAS;QACT,UAAU;IACd;IAEA,MAAM,eAAe,CAAC;QAClB,SAAS,MAAM,MAAM,CAAC,CAAC,IAAM,MAAM;IACvC;IAEA,0DAA0D;IAC1D,MAAM,kBAAkB,QAAQ,MAAM,CAClC,CAAC,MACG,IAAI,QAAQ,GAAG,WAAW,GAAG,QAAQ,CAAC,MAAM,WAAW,OACvD,CAAC,MAAM,QAAQ,CAAC;IAGxB,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAM,WAAU;0BAA6C;;;;;;0BAG9D,6LAAC;gBAAI,WAAU;0BACV,MAAM,GAAG,CAAC,CAAC,qBACR,6LAAC;wBAEG,WAAU;;4BAErB;0CACW,6LAAC;gCACG,MAAK;gCACL,SAAS,IAAM,aAAa;gCAC5B,WAAU;0CACb;;;;;;;uBARI,KAAK,QAAQ;;;;;;;;;;0BAgB9B,6LAAC;gBACG,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC;oBACP,SAAS,EAAE,MAAM,CAAC,KAAK;oBACvB,UAAU;gBACd;gBACA,SAAS,IAAM,UAAU;gBACzB,QAAQ,IAAM,WAAW,IAAM,UAAU,QAAQ;gBACjD,aAAY;gBACZ,WAAU;;;;;;YAIb,wBACG,6LAAC;gBAAG,WAAU;;oBACT,gBAAgB,GAAG,CAAC,CAAC,oBAClB,6LAAC;4BAEG,SAAS,IAAM,UAAU;4BACzB,WAAU;sCAET;2BAJI,IAAI,QAAQ;;;;;oBAOxB,gBAAgB,MAAM,KAAK,mBACxB,6LAAC;wBAAG,WAAU;kCAA0B;;;;;;;;;;;;;;;;;;AAMhE;GApFgB;KAAA","debugId":null}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/KnittinngMachineForm.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MultiEnumSelect} from \"../Common/MultiEnumSelect\"\ninterface KnittingMachineData {\n    diameter: number;\n    gauge: number[];\n    machineType: string;\n    specialFeatures?: string[];\n    machineCylinderTrack: number;\n    takedownRollerType: string;\n    typeOfYarn: string[];\n    machineBrand: string;\n    noOfMachines: number;\n}\n\ninterface KnittingMachineProps {\n    machinery?: KnittingMachineData;\n    setMachinery: (machine: KnittingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst KnittingMachine: React.FC<KnittingMachineProps> = ({\n                                                             machinery,\n                                                             setMachinery,\n                                                             onCancel,\n                                                         }) => {\n    const [formData, setFormData] = useState<KnittingMachineData>(machinery || {\n        diameter: 0,\n        gauge: [],\n        machineType: '',\n        specialFeatures: [],\n        machineCylinderTrack: 0,\n        takedownRollerType: '',\n        typeOfYarn: [],\n        machineBrand: '',\n        noOfMachines: 1,\n    });\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const diameterOptions = [\n        \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n        \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\",\n        \"26\", \"27\", \"28\", \"29\", \"30\", \"32\", \"34\", \"36\", \"38\", \"40\",\n        \"42\", \"44\"\n    ];\n\n    const guageOptions = [\n        \"5\", \"7\", \"9\", \"12\", \"14\", \"16\", \"18\", \"20\", \"24\", \"28\",\n        \"30\", \"32\", \"34\", \"36\", \"40\", \"44\", \"48\", \"52\", \"56\", \"60\"\n    ];\n\n    const machineTypes = [\n        \"Single Jersey\",\n        \"Double Jersey - Rib\",\n        \"Double Jersey - Interlock\",\n        \"3 Thread Fleece\",\n        \"Wrapper\",\n        \"Terry\",\n        \"Seamless\",\n        \"Garment Length\",\n    ];\n\n    const specialFunctionalities = [\n        \"Single Feeder\",\n        \"Auto-striper\",\n        \"Full Jacquard\",\n        \"Mini Jacquard\",\n        \"Wrapper\",\n        \"Pointel Mini Jacquard\",\n        \"Pointel Jacquard\",\n        \"Denim Knit\",\n        \"Double Side Terry\",\n        \"Matress\",\n        \"Polar Fleece\",\n        \"Poly Fleece\",\n        \"Quilt Design\",\n        \"Spacer\",\n        \"Sweater\",\n    ];\n\n    const cylinderTrackOptions = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    const takedownRollerTypes = [\"Tubular\", \"open width\"];\n    const yarnTypes = [\"cotton\", \"viscose/Spun\", \"polyester/filament\"];\n    const machineBrands = [\n        \"Mayer & Cie\", \"Unitex\", \"Year China\", \"Terrot\", \"Lakshmi Terrot\",\n        \"CMS\", \"Falmac\", \"FUKURAHA\", \"FUKUHAMA\", \"Buiyuan\", \"Liski\",\n        \"Pailung\", \"Santoni\", \"Smart\", \"Vilike\", \"Other\",\n    ];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.diameter || formData.diameter === 0) {\n            newErrors.diameter = 'Diameter is required';\n        }\n        if (!formData.gauge || formData.gauge.length === 0) {\n            newErrors.guage = 'At least one gauge must be selected';\n        }\n        if (!formData.machineType) {\n            newErrors.machineType = 'Machine type is required';\n        }\n        if (!formData.machineCylinderTrack || formData.machineCylinderTrack === 0) {\n            newErrors.machineCylinderTrack = 'Cylinder track is required';\n        }\n        if (!formData.takedownRollerType) {\n            newErrors.takedownRollerType = 'Takedown roller type is required';\n        }\n        if (!formData.typeOfYarn) {\n            newErrors.typeOfYarn = 'Yarn type is required';\n        }\n        if (!formData.machineBrand) {\n            newErrors.machineBrand = 'Machine brand is required';\n        }\n        if (!formData.noOfMachines || formData.noOfMachines < 1) {\n            newErrors.noOfMachines = 'Number of machines must be at least 1';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange =<K extends keyof KnittingMachineData> (field: K, value: KnittingMachineData[K]) => {\n\n        const newData = { ...formData, [field]: value };\n        setFormData(newData);\n\n        if (errors[field]) {\n            setErrors(prev => ({ ...prev, [field]: '' }));\n        }\n\n    };\n\n    useEffect(() => {\n\n    }, [formData.gauge]);\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            // reset form for next entry\n            setFormData({\n                diameter: 0,\n                gauge: [],\n                machineType: '',\n                specialFeatures: [],\n                machineCylinderTrack: 0,\n                takedownRollerType: '',\n                typeOfYarn: [],\n                machineBrand: '',\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Knitting Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Diameter */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Diameter <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.diameter || ''}\n                        onChange={(e) => handleChange('diameter', Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        <option value=\"\">Select diameter</option>\n                        {diameterOptions.map(d => (\n                            <option key={d} value={d}>{d}</option>\n                        ))}\n                    </select>\n                    {errors.diameter && (\n                        <p className=\"text-sm text-red-500\">{errors.diameter}</p>\n                    )}\n                </div>\n\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) => handleChange('machineType', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        <option value=\"\">Select machine type</option>\n                        {machineTypes.map(type => (\n                            <option key={type} value={type}>{type}</option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Machine Brand */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Brand <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineBrand}\n                        onChange={(e) => handleChange('machineBrand', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        <option value=\"\">Select machine brand</option>\n                        {machineBrands.map(brand => (\n                            <option key={brand} value={brand}>{brand}</option>\n                        ))}\n                    </select>\n                    {errors.machineBrand && (\n                        <p className=\"text-sm text-red-500\">{errors.machineBrand}</p>\n                    )}\n                </div>\n\n                {/* Number of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines || ''}\n                        onChange={(e) => handleChange('noOfMachines', Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        placeholder=\"Enter number of machines\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n\n                {/* Cylinder Track */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Cylinder Track <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineCylinderTrack || ''}\n                        onChange={(e) => handleChange('machineCylinderTrack', Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        <option value=\"\">Select cylinder track</option>\n                        {cylinderTrackOptions.map(track => (\n                            <option key={track} value={track}>{track}</option>\n                        ))}\n                    </select>\n                    {errors.machineCylinderTrack && (\n                        <p className=\"text-sm text-red-500\">{errors.machineCylinderTrack}</p>\n                    )}\n                </div>\n\n                {/* Takedown Roller Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Takedown Roller Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.takedownRollerType}\n                        onChange={(e) => handleChange('takedownRollerType', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        <option value=\"\">Select roller type</option>\n                        {takedownRollerTypes.map(type => (\n                            <option key={type} value={type}>{type}</option>\n                        ))}\n                    </select>\n                    {errors.takedownRollerType && (\n                        <p className=\"text-sm text-red-500\">{errors.takedownRollerType}</p>\n                    )}\n                </div>\n\n                {/* Yarn Type */}\n                <div className=\"space-y-2\">\n                    <MultiEnumSelect\n                        label=\"Type of Yarns *\"\n                        options={yarnTypes}\n                        value={formData.typeOfYarn}\n                        onChange={(newValue) => handleChange(\"typeOfYarn\", newValue)}\n                    />\n                    {errors.typeOfYarn && <p className=\"text-sm   text-red-500\">{errors.typeOfYarn}</p>}\n\n                </div>\n\n\n                        <div className={\"\"}>\n                            <MultiEnumSelect\n\n                                label=\"Special Features\"\n                                options={specialFunctionalities}\n                                value={formData.specialFeatures ?? []}\n                                onChange={(newValue) => handleChange(\"specialFeatures\", newValue)}\n                            />\n                        </div>\n\n\n\n            </div>\n\n            <div className=\"space-y-2 o\">\n                <MultiEnumSelect\n                    label=\"Gauge *\"\n                    options={guageOptions.map(Number)} // convert to numbers\n                    value={formData.gauge}\n                    onChange={(newValue) => handleChange(\"gauge\", newValue)}\n                />\n                {errors.guage && <p className=\"text-sm text-red-500\">{errors.guage}</p>}\n            </div>\n            {/* Gauge Selection */}\n\n\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3  bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default KnittingMachine;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1930, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/YarnSpinningMachineForm.tsx"],"sourcesContent":["import React from 'react';\n\ninterface YarnSpinningData {\n    [key: string]: unknown;\n}\n\ninterface YarnSpinningProps {\n    machinery?: YarnSpinningData;\n    setMachinery: (machine: YarnSpinningData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst YarnSpinningMachine: React.FC<YarnSpinningProps> = ({machinery, setMachinery, onCancel,\n                                                         }) => {\n\n\n    return (\n\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Yarn Spinning Machine</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default YarnSpinningMachine;"],"names":[],"mappings":";;;;;;AAWA,6DAA6D;AAC7D,MAAM,sBAAmD;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAClC;IAGtD,qBAEI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAA4B;;;;;;;;;;;;;AAM9E;KAjBM;uCAmBS","debugId":null}},
    {"offset": {"line": 1987, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/YarnProcessingMachineForm.tsx"],"sourcesContent":["import React, { useState} from 'react';\n\ninterface YarnProcessingMachineData {\n    typeOfYarnProcessingMachine: \"Yarn Dyeing\" | \"Yarn Twisting\" | \"Cone-Winding\";\n    noOfHeads: number;\n    typeOfYarn: \"Cotton\" | \"Viscose/Spun\" | \"Polyester/Filament\";\n    noOfMachines: number;\n}\n\ninterface YarnProcessingMachineProps {\n    machinery?: YarnProcessingMachineData;\n    setMachinery: (machine: YarnProcessingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst YarnProcessingMachine: React.FC<YarnProcessingMachineProps> = ({\n                                                             machinery,\n                                                             setMachinery,\n                                                             onCancel,\n                                                         }) => {\n    const [formData, setFormData] = useState<YarnProcessingMachineData>(\n        machinery || {\n            typeOfYarnProcessingMachine: \"Yarn Dyeing\",\n            noOfHeads: 1,\n            typeOfYarn: \"Cotton\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes = [\"Yarn Dyeing\", \"Yarn Twisting\", \"Cone-Winding\"];\n    const yarnTypes = [\"Cotton\", \"Viscose/Spun\", \"Polyester/Filament\"];\n\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.typeOfYarnProcessingMachine)\n            newErrors.typeOfYarnProcessingMachine = \"Required\";\n        if (!formData.noOfHeads || formData.noOfHeads <= 0)\n            newErrors.noOfHeads = \"Heads must be positive\";\n        if (!formData.typeOfYarn) newErrors.typeOfYarn = \"Required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0)\n            newErrors.noOfMachines = \"Machines must be positive\";\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof YarnProcessingMachineData> (field: K, value: YarnProcessingMachineData[K]) => {\n\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                typeOfYarnProcessingMachine: \"Yarn Dyeing\",\n                noOfHeads: 1,\n                typeOfYarn: \"Cotton\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Yarn Processing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Type of Yarn Processing Machine */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Type of Machine <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.typeOfYarnProcessingMachine}\n                        onChange={(e) =>\n                            handleChange(\n                                \"typeOfYarnProcessingMachine\",\n                                e.target.value as YarnProcessingMachineData[\"typeOfYarnProcessingMachine\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfYarnProcessingMachine && (\n                        <p className=\"text-sm text-red-500\">\n                            {errors.typeOfYarnProcessingMachine}\n                        </p>\n                    )}\n                </div>\n\n                {/* No of Heads */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Heads <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfHeads}\n                        onChange={(e) => handleChange(\"noOfHeads\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfHeads && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfHeads}</p>\n                    )}\n                </div>\n\n                {/* Yarn Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Yarn Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.typeOfYarn}\n                        onChange={(e) =>\n                            handleChange(\n                                \"typeOfYarn\",\n                                e.target.value as YarnProcessingMachineData[\"typeOfYarn\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {yarnTypes.map((y) => (\n                            <option key={y} value={y}>\n                                {y}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfYarn && (\n                        <p className=\"text-sm text-red-500\">{errors.typeOfYarn}</p>\n                    )}\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3  bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default YarnProcessingMachine;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2352, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/WeavingMachineForm.tsx"],"sourcesContent":["import React, { useState} from 'react';\n\ninterface WeavingMachineData {\n    machineType: \"Hand Loom\" | \"Rapier Loom\" | \"Air Jet Loom\" | \"Hand Loom - Jacquard\"|\"Automatic Jacquard\"|\"Projectile Loom\" | \"Water Jet Loom\" | \"Other\";\n\n    typeOfYarn: \"Cotton\" | \"Viscose/Spun\" | \"Polyester/Filament\";\n    noOfMachines: number;\n}\n\ninterface WeavingMachineProps {\n    machinery?: WeavingMachineData;\n    setMachinery: (machine: WeavingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst WeavingMachine: React.FC<WeavingMachineProps> = ({\n                                                                         machinery,\n                                                                         setMachinery,\n                                                                         onCancel,\n                                                                     }) => {\n    const [formData, setFormData] = useState<WeavingMachineData>(\n        machinery || {\n            machineType: \"Hand Loom\",\n            typeOfYarn: \"Cotton\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes: WeavingMachineData[\"machineType\"][] = [\n        \"Hand Loom\",\n        \"Rapier Loom\",\n        \"Air Jet Loom\",\n        \"Hand Loom - Jacquard\",\n        \"Automatic Jacquard\",\n        \"Projectile Loom\",\n        \"Water Jet Loom\",\n        \"Other\",\n    ];\n    const yarnTypes: WeavingMachineData[\"typeOfYarn\"][] = [\n        \"Cotton\",\n        \"Viscose/Spun\",\n        \"Polyester/Filament\",\n    ];\n\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n            if (!formData.machineType) newErrors.machineType = \"Machine type is required\";\n            if (!formData.typeOfYarn) newErrors.typeOfYarn = \"Yarn type is required\";\n            if (!formData.noOfMachines || formData.noOfMachines <= 0) {\n                newErrors.noOfMachines = \"Number of machines must be greater than 0\";\n            }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof WeavingMachineData> (field: K, value: WeavingMachineData[K]) => {\n\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Hand Loom\",\n                typeOfYarn: \"Cotton\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Weaving Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Type of Yarn Processing Machine */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as WeavingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfYarnProcessingMachine && (\n                        <p className=\"text-sm text-red-500\">\n                            {errors.typeOfYarnProcessingMachine}\n                        </p>\n                    )}\n                </div>\n\n                {/* Yarn Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Yarn Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.typeOfYarn}\n                        onChange={(e) =>\n                            handleChange(\n                                \"typeOfYarn\",\n                                e.target.value as WeavingMachineData[\"typeOfYarn\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {yarnTypes.map((y) => (\n                            <option key={y} value={y}>\n                                {y}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfYarn && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfHeads}</p>\n                    )}\n                </div>\n\n                {/* Number of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) => handleChange(\"noOfMachines\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.typeOfYarn && (\n                        <p className=\"text-sm text-red-500\">{errors.typeOfYarn}</p>\n                    )}\n                </div>\n\n\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3  bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default WeavingMachine"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2675, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/DyeingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface DyeingMachineData {\n    DyeingMachineType: \"Jigger\" | \"Soft FLow\" | \"Jet\" | \"Winch\" | \"Beam\" | \"Air Flow\" | \"Pad Stream\";\n    minimumCapacity?: number;\n    maximumCapacity?: number;\n    typeOfFabric?: \"Tubular\" | \"open width\";\n    Maker?: string;\n    noOfMachines: number;\n}\n\ninterface Props {\n    machinery?: DyeingMachineData;\n    setMachinery: (machine: DyeingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst machineTypes: DyeingMachineData[\"DyeingMachineType\"][] = [\n    \"Jigger\",\n    \"Soft FLow\",\n    \"Jet\",\n    \"Winch\",\n    \"Beam\",\n    \"Air Flow\",\n    \"Pad Stream\",\n];\n\nconst fabricTypes: (\"Tubular\" | \"open width\")[] = [\"Tubular\", \"open width\"];\n\nconst DyeingMachineForm: React.FC<Props> = ({ machinery, setMachinery, onCancel }) => {\n    const [formData, setFormData] = useState<DyeingMachineData>(\n        machinery || {\n            DyeingMachineType: \"Jigger\",\n            noOfMachines: 1,\n        }\n    );\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const handleChange =<K extends keyof DyeingMachineData> (field: K, value: DyeingMachineData[K]) => {\n        setFormData((prev) => ({ ...prev, [field]: value }));\n        if (errors[field]) setErrors((prev) => ({ ...prev, [field]: \"\" }));\n    };\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n        if (!formData.DyeingMachineType) newErrors.DyeingMachineType = \"Machine type is required\";\n        if (!formData.noOfMachines || formData.noOfMachines < 1)\n            newErrors.noOfMachines = \"At least 1 machine required\";\n        if (formData.DyeingMachineType !== \"Jigger\" && !formData.typeOfFabric)\n            newErrors.typeOfFabric = \"Fabric type is required\";\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 shadow-md\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">Add Dyeing Machine</h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.DyeingMachineType}\n                        onChange={(e) => handleChange(\"DyeingMachineType\", e.target.value as DyeingMachineData[\"DyeingMachineType\"])}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.DyeingMachineType && <p className=\"text-sm text-red-500\">{errors.DyeingMachineType}</p>}\n                </div>\n\n                {/* Maker */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">Maker</label>\n                    <input\n                        type=\"text\"\n                        value={formData.Maker || \"\"}\n                        onChange={(e) => handleChange(\"Maker\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        placeholder=\"Enter machine maker\"\n                    />\n                </div>\n\n                {/* Min Capacity */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">Minimum Capacity</label>\n                    <input\n                        min={0}\n                        type=\"number\"\n                        value={formData.minimumCapacity ?? \"\"}\n                        onChange={(e) => handleChange(\"minimumCapacity\", e.target.value ? Number(e.target.value) : undefined)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        placeholder=\"Enter min capacity\"\n                    />\n                </div>\n\n                {/* Max Capacity */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">Maximum Capacity</label>\n                    <input\n                        type=\"number\"\n                        value={formData.maximumCapacity ?? \"\"}\n                        onChange={(e) => handleChange(\"maximumCapacity\", e.target.value ? Number(e.target.value) : undefined)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        placeholder=\"Enter max capacity\"\n                    />\n                </div>\n\n                {/* Fabric type (required if not Jigger) */}\n\n                    <div className=\"space-y-2\">\n                        <label className=\"block text-sm font-semibold text-gray-700\">\n                            Type of Fabric {formData.DyeingMachineType !== \"Jigger\"? <span className=\"text-red-500\">*</span> : <></>  }\n                        </label>\n                        <select\n                            required={formData.DyeingMachineType === \"Jigger\"}\n                            value={formData.typeOfFabric || \"\"}\n                            onChange={(e) =>\n                                handleChange(\"typeOfFabric\", e.target.value as \"Tubular\" | \"open width\")\n                            }\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        >\n                            <option value=\"\">Select fabric type</option>\n                            {fabricTypes.map((f) => (\n                                <option key={f} value={f}>\n                                    {f}\n                                </option>\n                            ))}\n                        </select>\n                        {errors.typeOfFabric && (\n                            <p className=\"text-sm text-red-500\">{errors.typeOfFabric}</p>\n                        )}\n\n                        {errors.typeOfFabric && <p className=\"text-sm text-red-500\">{errors.typeOfFabric}</p>}\n                    </div>\n\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) => handleChange(\"noOfMachines\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                        placeholder=\"Enter number of machines\"\n                    />\n                    {errors.noOfMachines && <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DyeingMachineForm;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3092, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/FabricProcessingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface FabricProcessingMachineData {\n    machineType:\n        | \"Stenter\"\n        | \"Dryer\"\n        | \"Heat-setting\"\n        | \"Fabric Slitting\"\n        | \"Napping or Raising\"\n        | \"Raising\" |\n        \"Padding\"\n        | \"Mercerizing - Knit\"\n        | \"Peaching\"\n        | \"Sueding\"\n        | \"Embossing\"\n        | \"Calendring\"\n        | \"Mercherizing - Woven\";\n    typeOfFabric: \"Tubular\" | \"open width\";\n    maxWidthOfFabric: number;\n    machineBrand: string;\n    noOfMachines: number;\n}\n\ninterface FabricProcessingMachineProps {\n    machinery?: FabricProcessingMachineData;\n    setMachinery: (machine: FabricProcessingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst FabricProcessingMachine: React.FC<FabricProcessingMachineProps> = ({\n                                                                             machinery,\n                                                                             setMachinery,\n                                                                             onCancel,\n                                                                         }) => {\n    const [formData, setFormData] = useState<FabricProcessingMachineData>(\n        machinery || {\n            machineType: \"Stenter\",\n            typeOfFabric: \"Tubular\",\n            maxWidthOfFabric: 1,\n            machineBrand: \"\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const machineTypes: FabricProcessingMachineData[\"machineType\"][] = [\n        \"Stenter\",\n        \"Dryer\",\n        \"Heat-setting\",\n        \"Fabric Slitting\",\n        \"Napping or Raising\",\n        \"Raising\" ,\n        \"Padding\",\n        \"Mercerizing - Knit\",\n        \"Peaching\",\n        \"Sueding\",\n        \"Embossing\",\n        \"Calendring\",\n        \"Mercherizing - Woven\",\n    ];\n\n    const fabricTypes: FabricProcessingMachineData[\"typeOfFabric\"][] = [\n        \"Tubular\",\n        \"open width\",\n    ];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.typeOfFabric) newErrors.typeOfFabric = \"Required\";\n        if (!formData.maxWidthOfFabric || formData.maxWidthOfFabric <= 0)\n            newErrors.maxWidthOfFabric = \"Width must be positive\";\n        if (!formData.machineBrand.trim())\n            newErrors.machineBrand = \"Machine brand is required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0)\n            newErrors.noOfMachines = \"Machines must be positive\";\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof FabricProcessingMachineData>(\n        field: K,\n        value: FabricProcessingMachineData[K]\n    ) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Stenter\",\n                typeOfFabric: \"Tubular\",\n                maxWidthOfFabric: 1,\n                machineBrand: \"\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Fabric Processing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as FabricProcessingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Fabric Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Type of Fabric <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.typeOfFabric}\n                        onChange={(e) =>\n                            handleChange(\n                                \"typeOfFabric\",\n                                e.target.value as FabricProcessingMachineData[\"typeOfFabric\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {fabricTypes.map((f) => (\n                            <option key={f} value={f}>\n                                {f}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfFabric && (\n                        <p className=\"text-sm text-red-500\">{errors.typeOfFabric}</p>\n                    )}\n                </div>\n\n                {/* Max Width of Fabric */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Max Width of Fabric <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.maxWidthOfFabric}\n                        onChange={(e) =>\n                            handleChange(\"maxWidthOfFabric\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.maxWidthOfFabric && (\n                        <p className=\"text-sm text-red-500\">{errors.maxWidthOfFabric}</p>\n                    )}\n                </div>\n\n                {/* Machine Brand */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Brand <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={formData.machineBrand}\n                        onChange={(e) => handleChange(\"machineBrand\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.machineBrand && (\n                        <p className=\"text-sm text-red-500\">{errors.machineBrand}</p>\n                    )}\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default FabricProcessingMachine;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3514, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/FabricFinishingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface FabricFinishingMachineData {\n    machineType:\"Compacting\"| \"Steaming\" | \"Calendring\"\n    typeOfFabric: \"Tubular\" | \"open width\";\n    maxWidthOfFabric: number;\n    machineBrand: string;\n    noOfMachines: number;\n}\n\ninterface FabricFinishingMachineProps {\n    machinery?: FabricFinishingMachineData;\n    setMachinery: (machine: FabricFinishingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst FabricFinishingMachine: React.FC<FabricFinishingMachineProps> = ({\n                                                                             machinery,\n                                                                             setMachinery,\n                                                                             onCancel,\n                                                                         }) => {\n    const [formData, setFormData] = useState<FabricFinishingMachineData>(\n        machinery || {\n            machineType: \"Compacting\",\n            typeOfFabric: \"Tubular\",\n            maxWidthOfFabric: 1,\n            machineBrand: \"\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const machineTypes = [\"Compacting\", \"Steaming\", \"Calendring\"];\n\n    const fabricTypes = [\"Tubular\", \"open width\"];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.typeOfFabric) newErrors.typeOfFabric = \"Required\";\n        if (!formData.maxWidthOfFabric || formData.maxWidthOfFabric <= 0)\n            newErrors.maxWidthOfFabric = \"Width must be positive\";\n        if (!formData.machineBrand.trim())\n            newErrors.machineBrand = \"Brand is required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0)\n            newErrors.noOfMachines = \"Machines must be positive\";\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = (\n        field: keyof FabricFinishingMachineData,\n        value: unknown\n    ) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Compacting\",\n                typeOfFabric: \"Tubular\",\n                maxWidthOfFabric: 1,\n                machineBrand: \"\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Fabric Finishing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as FabricFinishingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Type of Fabric */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Type of Fabric <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.typeOfFabric}\n                        onChange={(e) =>\n                            handleChange(\n                                \"typeOfFabric\",\n                                e.target.value as FabricFinishingMachineData[\"typeOfFabric\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {fabricTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.typeOfFabric && (\n                        <p className=\"text-sm text-red-500\">{errors.typeOfFabric}</p>\n                    )}\n                </div>\n\n                {/* Max Width of Fabric */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Max Width of Fabric <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.maxWidthOfFabric}\n                        onChange={(e) =>\n                            handleChange(\"maxWidthOfFabric\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.maxWidthOfFabric && (\n                        <p className=\"text-sm text-red-500\">{errors.maxWidthOfFabric}</p>\n                    )}\n                </div>\n\n                {/* Machine Brand */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Brand <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={formData.machineBrand}\n                        onChange={(e) => handleChange(\"machineBrand\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.machineBrand && (\n                        <p className=\"text-sm text-red-500\">{errors.machineBrand}</p>\n                    )}\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default FabricFinishingMachine;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3926, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/WashingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface WashingMachineData {\n    machineType: \"Washing Machine\" | \"Tumble Dryer\" | \"Hydro Machine\";\n    noOfMachines: number;\n}\n\ninterface WashingMachineProps {\n    machinery?: WashingMachineData;\n    setMachinery: (machine: WashingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst WashingMachineForm: React.FC<WashingMachineProps> = ({\n                                                               machinery,\n                                                               setMachinery,\n                                                               onCancel,\n                                                           }) => {\n    const [formData, setFormData] = useState<WashingMachineData>(\n        machinery || {\n            machineType: \"Washing Machine\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes = [\"Washing Machine\", \"Tumble Dryer\", \"Hydro Machine\"];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0) {\n            newErrors.noOfMachines = \"Machines must be positive\";\n        }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof WashingMachineData> (field: K, value: WashingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Washing Machine\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Washing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as WashingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Number of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default WashingMachineForm;\n"],"names":[],"mappings":";;;;;AAAA;;;;AAaA,MAAM,qBAAoD;QAAC,EACI,SAAS,EACT,YAAY,EACZ,QAAQ,EACX;;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EACpC,aAAa;QACT,aAAa;QACb,cAAc;IAClB;IAGJ,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAyB,CAAC;IAC9D,MAAM,eAAe;QAAC;QAAmB;QAAgB;KAAgB;IAEzE,MAAM,WAAW;QACb,MAAM,YAAoC,CAAC;QAC3C,IAAI,CAAC,SAAS,WAAW,EAAE,UAAU,WAAW,GAAG;QACnD,IAAI,CAAC,SAAS,YAAY,IAAI,SAAS,YAAY,IAAI,GAAG;YACtD,UAAU,YAAY,GAAG;QAC7B;QACA,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC7C;IAEA,MAAM,eAAe,CAAsC,OAAU;QACjE,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,MAAM,EAAE;QAAM;QAC1C,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAAM,EAAE;gBAAG,CAAC;QACjD;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,YAAY;YACZ,aAAa;YACb,YAAY;gBACR,aAAa;gBACb,cAAc;YAClB;YACA;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BACG,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,6LAAC;gCACG,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAMlB,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDAC5C,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEhD,6LAAC;gCACG,OAAO,SAAS,WAAW;gCAC3B,UAAU,CAAC,IACP,aACI,eACA,EAAE,MAAM,CAAC,KAAK;gCAGtB,WAAU;0CAET,aAAa,GAAG,CAAC,CAAC,qBACf,6LAAC;wCAAkB,OAAO;kDACrB;uCADQ;;;;;;;;;;4BAKpB,OAAO,WAAW,kBACf,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,WAAW;;;;;;;;;;;;kCAK/D,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDACtC,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEtD,6LAAC;gCACG,MAAK;gCACL,KAAI;gCACJ,OAAO,SAAS,YAAY;gCAC5B,UAAU,CAAC,IACP,aAAa,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;gCAEtD,WAAU;;;;;;4BAEb,OAAO,YAAY,kBAChB,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;;;;;;;0BAMpE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;kCAGD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GAzIM;KAAA;uCA2IS","debugId":null}},
    {"offset": {"line": 4184, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/CuttingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface CuttingMachineData {\n    machineType: \"Hand Cutting\" | \"Straight Knife\" | \"Band Knife\" | \"Automatic Cutting\";\n    noOfMachines: number;\n}\n\ninterface CuttingMachineProps {\n    machinery?: CuttingMachineData;\n    setMachinery: (machine: CuttingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst CuttingMachineForm: React.FC<CuttingMachineProps> = ({\n                                                               machinery,\n                                                               setMachinery,\n                                                               onCancel,\n                                                           }) => {\n    const [formData, setFormData] = useState<CuttingMachineData>(\n        machinery || {\n            machineType: \"Hand Cutting\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes = [\"Hand Cutting\", \"Straight Knife\", \"Band Knife\",\"Automatic Cutting\"];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0) {\n            newErrors.noOfMachines = \"Machines must be positive\";\n        }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange =<K extends keyof CuttingMachineData> (field: K, value: CuttingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Hand Cutting\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Cutting Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as CuttingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Number of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CuttingMachineForm;\n"],"names":[],"mappings":";;;;;AAAA;;;;AAaA,MAAM,qBAAoD;QAAC,EACI,SAAS,EACT,YAAY,EACZ,QAAQ,EACX;;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EACpC,aAAa;QACT,aAAa;QACb,cAAc;IAClB;IAGJ,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAyB,CAAC;IAC9D,MAAM,eAAe;QAAC;QAAgB;QAAkB;QAAa;KAAoB;IAEzF,MAAM,WAAW;QACb,MAAM,YAAoC,CAAC;QAC3C,IAAI,CAAC,SAAS,WAAW,EAAE,UAAU,WAAW,GAAG;QACnD,IAAI,CAAC,SAAS,YAAY,IAAI,SAAS,YAAY,IAAI,GAAG;YACtD,UAAU,YAAY,GAAG;QAC7B;QACA,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC7C;IAEA,MAAM,eAAc,CAAsC,OAAU;QAChE,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,MAAM,EAAE;QAAM;QAC1C,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAAM,EAAE;gBAAG,CAAC;QACjD;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,YAAY;YACZ,aAAa;YACb,YAAY;gBACR,aAAa;gBACb,cAAc;YAClB;YACA;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BACG,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,6LAAC;gCACG,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAMlB,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDAC5C,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEhD,6LAAC;gCACG,OAAO,SAAS,WAAW;gCAC3B,UAAU,CAAC,IACP,aACI,eACA,EAAE,MAAM,CAAC,KAAK;gCAGtB,WAAU;0CAET,aAAa,GAAG,CAAC,CAAC,qBACf,6LAAC;wCAAkB,OAAO;kDACrB;uCADQ;;;;;;;;;;4BAKpB,OAAO,WAAW,kBACf,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,WAAW;;;;;;;;;;;;kCAK/D,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDACtC,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEtD,6LAAC;gCACG,MAAK;gCACL,KAAI;gCACJ,OAAO,SAAS,YAAY;gCAC5B,UAAU,CAAC,IACP,aAAa,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;gCAEtD,WAAU;;;;;;4BAEb,OAAO,YAAY,kBAChB,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;;;;;;;0BAMpE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;kCAGD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GAzIM;KAAA;uCA2IS","debugId":null}},
    {"offset": {"line": 4443, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/ComputerizedEmbroideryMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface ComputerizedEmbroideryData {\n    machineType: \"Chenley\" | \"With Sequence\" | \"Without Sequence\" | \"Tufft\" | \"Schiffli M/c\";\n    noOfHeads: number;\n    machineBrand: string;\n    model?: string;\n    noOfMachines: number;\n}\n\ninterface ComputerizedEmbroideryProps {\n    machinery?: ComputerizedEmbroideryData;\n    setMachinery: (machine: ComputerizedEmbroideryData) => void;\n    onCancel: () => void;\n}\n\nconst ComputerizedEmbroidery: React.FC<ComputerizedEmbroideryProps> = ({\n                                                                           machinery,\n                                                                           setMachinery,\n                                                                           onCancel,\n                                                                       }) => {\n    const [formData, setFormData] = useState<ComputerizedEmbroideryData>(\n        machinery || {\n            machineType: \"Chenley\",\n            noOfHeads: 1,\n            machineBrand: \"\",\n            model: \"\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const machineTypes = [\"Chenley\", \"With Sequence\", \"Without Sequence\", \"Tufft\", \"Schiffli M/c\"];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.noOfHeads || formData.noOfHeads <= 0) newErrors.noOfHeads = \"Heads must be positive\";\n        if (!formData.machineBrand.trim()) newErrors.machineBrand = \"Brand is required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0) newErrors.noOfMachines = \"Machines must be positive\";\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange =<K extends keyof ComputerizedEmbroideryData> (field: K, value: ComputerizedEmbroideryData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Chenley\",\n                noOfHeads: 1,\n                machineBrand: \"\",\n                model: \"\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">Add Computerized Embroidery Machine</h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\"machineType\", e.target.value as ComputerizedEmbroideryData[\"machineType\"])\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && <p className=\"text-sm text-red-500\">{errors.machineType}</p>}\n                </div>\n\n                {/* No of Heads */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Heads <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfHeads}\n                        onChange={(e) => handleChange(\"noOfHeads\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfHeads && <p className=\"text-sm text-red-500\">{errors.noOfHeads}</p>}\n                </div>\n\n                {/* Machine Brand */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Brand <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={formData.machineBrand}\n                        onChange={(e) => handleChange(\"machineBrand\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.machineBrand && <p className=\"text-sm text-red-500\">{errors.machineBrand}</p>}\n                </div>\n\n                {/* Model (Optional) */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">Model (Optional)</label>\n                    <input\n                        type=\"text\"\n                        value={formData.model || \"\"}\n                        onChange={(e) => handleChange(\"model\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) => handleChange(\"noOfMachines\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ComputerizedEmbroidery;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4827, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/ManualEmbroideryMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface ManualEmbeddingMachineData {\n    machineType: \"Chenley\" | \"With Sequence\" | \"Without Sequence\" | \"Tufft\" | \"Schiffli M/c\";\n    noOfHeads: number;\n    machineBrand: string;\n    model?: string;\n    noOfMachines: number;\n}\n\ninterface ManualEmbeddingMachineProps {\n    machinery?: ManualEmbeddingMachineData;\n    setMachinery: (machine: ManualEmbeddingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst ManualEmbeddingMachine: React.FC<ManualEmbeddingMachineProps> = ({\n                                                                           machinery,\n                                                                           setMachinery,\n                                                                           onCancel,\n                                                                       }) => {\n    const [formData, setFormData] = useState<ManualEmbeddingMachineData>(\n        machinery || {\n            machineType: \"Chenley\",\n            noOfHeads: 1,\n            machineBrand: \"\",\n            model: \"\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes = [\"Chenley\", \"With Sequence\", \"Without Sequence\", \"Tufft\", \"Schiffli M/c\"];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (!formData.noOfHeads || formData.noOfHeads <= 0)\n            newErrors.noOfHeads = \"Heads must be positive\";\n        if (!formData.machineBrand) newErrors.machineBrand = \"Required\";\n        if (!formData.noOfMachines || formData.noOfMachines <= 0)\n            newErrors.noOfMachines = \"Machines must be positive\";\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof ManualEmbeddingMachineData>(field: K, value: ManualEmbeddingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Chenley\",\n                noOfHeads: 1,\n                machineBrand: \"\",\n                model: \"\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">Add Manual Embedding Machine</h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) => handleChange(\"machineType\", e.target.value as ManualEmbeddingMachineData[\"machineType\"])}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && <p className=\"text-sm text-red-500\">{errors.machineType}</p>}\n                </div>\n\n                {/* No of Heads */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Heads <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfHeads}\n                        onChange={(e) => handleChange(\"noOfHeads\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfHeads && <p className=\"text-sm text-red-500\">{errors.noOfHeads}</p>}\n                </div>\n\n                {/* Machine Brand */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Brand <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={formData.machineBrand}\n                        onChange={(e) => handleChange(\"machineBrand\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.machineBrand && <p className=\"text-sm text-red-500\">{errors.machineBrand}</p>}\n                </div>\n\n                {/* Model (Optional) */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">Model (Optional)</label>\n                    <input\n                        type=\"text\"\n                        value={formData.model || \"\"}\n                        onChange={(e) => handleChange(\"model\", e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines}\n                        onChange={(e) => handleChange(\"noOfMachines\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ManualEmbeddingMachine;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5211, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/FusingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface FusingMachineData {\n    machineType: \"Roller\" | \"Curing Machine\" | \"Single Flat bed\" | \"Double Flat Bed\" | \"Four Side Flat Bed\";\n    bedSizeLength?: number;\n    bedSizeBreath?: number;\n    noOfMachines?: number;\n}\n\ninterface FusingMachineProps {\n    machinery?: FusingMachineData;\n    setMachinery: (machine: FusingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst FusingMachine: React.FC<FusingMachineProps> = ({\n                                                         machinery,\n                                                         setMachinery,\n                                                         onCancel,\n                                                     }) => {\n    const [formData, setFormData] = useState<FusingMachineData>(\n        machinery || {\n            machineType: \"Roller\",\n            bedSizeLength: undefined,\n            bedSizeBreath: undefined,\n            noOfMachines: undefined,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const machineTypes = [\n        \"Roller\",\n        \"Curing Machine\",\n        \"Single Flat bed\",\n        \"Double Flat Bed\",\n        \"Four Side Flat Bed\",\n    ];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n\n        if (formData.bedSizeLength !== undefined && formData.bedSizeLength <= 0) {\n            newErrors.bedSizeLength = \"Must be positive\";\n        }\n\n        if (formData.bedSizeBreath !== undefined && formData.bedSizeBreath <= 0) {\n            newErrors.bedSizeBreath = \"Must be positive\";\n        }\n\n        if (formData.noOfMachines !== undefined && formData.noOfMachines <= 0) {\n            newErrors.noOfMachines = \"Must be positive\";\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof FusingMachineData>(field: K, value: FusingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Roller\",\n                bedSizeLength: undefined,\n                bedSizeBreath: undefined,\n                noOfMachines: undefined,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Fusing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\"machineType\", e.target.value as FusingMachineData[\"machineType\"])\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* Bed Size Length */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Bed Size Length (cm)\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.bedSizeLength ?? \"\"}\n                        onChange={(e) => handleChange(\"bedSizeLength\", e.target.value ? Number(e.target.value) : undefined)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.bedSizeLength && (\n                        <p className=\"text-sm text-red-500\">{errors.bedSizeLength}</p>\n                    )}\n                </div>\n\n                {/* Bed Size Breath */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Bed Size Breath (cm)\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.bedSizeBreath ?? \"\"}\n                        onChange={(e) => handleChange(\"bedSizeBreath\", e.target.value ? Number(e.target.value) : undefined)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.bedSizeBreath && (\n                        <p className=\"text-sm text-red-500\">{errors.bedSizeBreath}</p>\n                    )}\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines ?? \"\"}\n                        onChange={(e) => handleChange(\"noOfMachines\", e.target.value ? Number(e.target.value) : undefined)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default FusingMachine;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5544, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/PrintingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface PrintingMachineData {\n    PrintingMachineType:\n        | \"Wooden Table\"\n        | \"Manual M/c\"\n        | \"Automatic M/c\"\n        | \"Glass Table\"\n        | \"Rotary M/c\"\n        | \"Sublimation Print\"\n        | \"Heat Transfers\"\n        | \"Emboss Print\"\n        | \"Digital Sticker Print (DTF)\"\n        | \"Digital Print (DTG)\"\n        | \"Burnout\";\n    PalletSize: number;\n}\n\ninterface PrintingMachineProps {\n    machinery?: PrintingMachineData;\n    setMachinery: (machine: PrintingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst PrintingMachine: React.FC<PrintingMachineProps> = ({\n                                                             machinery,\n                                                             setMachinery,\n                                                             onCancel,\n                                                         }) => {\n    const [formData, setFormData] = useState<PrintingMachineData>(\n        machinery || {\n            PrintingMachineType: \"Wooden Table\",\n            PalletSize: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const machineTypes: PrintingMachineData[\"PrintingMachineType\"][] = [\n        \"Wooden Table\",\n        \"Manual M/c\",\n        \"Automatic M/c\",\n        \"Glass Table\",\n        \"Rotary M/c\",\n        \"Sublimation Print\",\n        \"Heat Transfers\",\n        \"Emboss Print\",\n        \"Digital Sticker Print (DTF)\",\n        \"Digital Print (DTG)\",\n        \"Burnout\",\n    ];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n        if (!formData.PrintingMachineType)\n            newErrors.PrintingMachineType = \"Required\";\n        if (!formData.PalletSize || formData.PalletSize <= 0)\n            newErrors.PalletSize = \"Pallet size must be positive\";\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange =<K extends keyof PrintingMachineData> (field: K, value: PrintingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                PrintingMachineType: \"Wooden Table\",\n                PalletSize: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Printing Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.PrintingMachineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"PrintingMachineType\",\n                                e.target.value as PrintingMachineData[\"PrintingMachineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.PrintingMachineType && (\n                        <p className=\"text-sm text-red-500\">{errors.PrintingMachineType}</p>\n                    )}\n                </div>\n\n                {/* Pallet Size */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Pallet Size <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.PalletSize}\n                        onChange={(e) => handleChange(\"PalletSize\", Number(e.target.value))}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.PalletSize && (\n                        <p className=\"text-sm text-red-500\">{errors.PalletSize}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3  bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default PrintingMachine;\n"],"names":[],"mappings":";;;;;AAAA;;;;AAwBA,MAAM,kBAAkD;QAAC,EACI,SAAS,EACT,YAAY,EACZ,QAAQ,EACX;;IACtD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EACpC,aAAa;QACT,qBAAqB;QACrB,YAAY;IAChB;IAGJ,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAyB,CAAC;IAE9D,MAAM,eAA6D;QAC/D;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;IAED,MAAM,WAAW;QACb,MAAM,YAAoC,CAAC;QAC3C,IAAI,CAAC,SAAS,mBAAmB,EAC7B,UAAU,mBAAmB,GAAG;QACpC,IAAI,CAAC,SAAS,UAAU,IAAI,SAAS,UAAU,IAAI,GAC/C,UAAU,UAAU,GAAG;QAE3B,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC7C;IAEA,MAAM,eAAc,CAAuC,OAAU;QACjE,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,MAAM,EAAE;QAAM;QAC1C,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAAM,EAAE;gBAAG,CAAC;QACjD;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,YAAY;YACZ,aAAa;YACb,YAAY;gBACR,qBAAqB;gBACrB,YAAY;YAChB;YACA;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BACG,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,6LAAC;gCACG,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAMlB,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDAC5C,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEhD,6LAAC;gCACG,OAAO,SAAS,mBAAmB;gCACnC,UAAU,CAAC,IACP,aACI,uBACA,EAAE,MAAM,CAAC,KAAK;gCAGtB,WAAU;0CAET,aAAa,GAAG,CAAC,CAAC,qBACf,6LAAC;wCAAkB,OAAO;kDACrB;uCADQ;;;;;;;;;;4BAKpB,OAAO,mBAAmB,kBACvB,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,mBAAmB;;;;;;;;;;;;kCAKvE,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDAC7C,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAE/C,6LAAC;gCACG,MAAK;gCACL,KAAI;gCACJ,OAAO,SAAS,UAAU;gCAC1B,UAAU,CAAC,IAAM,aAAa,cAAc,OAAO,EAAE,MAAM,CAAC,KAAK;gCACjE,WAAU;;;;;;4BAEb,OAAO,UAAU,kBACd,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,UAAU;;;;;;;;;;;;;;;;;;0BAMlE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;kCAGD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GArJM;KAAA;uCAuJS","debugId":null}},
    {"offset": {"line": 5808, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/StitchingMachineForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface StitchingMachineData {\n    machineType:\n        | \"Single Needle (singer)\"\n        | \"Double Needle\"\n        | \"Overlock\"\n        | \"Flatlock\"\n        | \"Feed of the arm\"\n        | \"Edge Cutter\"\n        | \"Chain Stitch\"\n        | \"Others\";\n    noOfMachines?: number;\n}\n\ninterface StitchingMachineProps {\n    machinery?: StitchingMachineData;\n    setMachinery: (machine: StitchingMachineData) => void;\n    onCancel: () => void;\n}\n\nconst StitchingMachine: React.FC<StitchingMachineProps> = ({\n                                                               machinery,\n                                                               setMachinery,\n                                                               onCancel,\n                                                           }) => {\n    const [formData, setFormData] = useState<StitchingMachineData>(\n        machinery || {\n            machineType: \"Single Needle (singer)\",\n            noOfMachines: 1,\n        }\n    );\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n\n    const machineTypes: StitchingMachineData[\"machineType\"][] = [\n        \"Single Needle (singer)\",\n        \"Double Needle\",\n        \"Overlock\",\n        \"Flatlock\",\n        \"Feed of the arm\",\n        \"Edge Cutter\",\n        \"Chain Stitch\",\n        \"Others\",\n    ];\n\n    const validate = () => {\n        const newErrors: Record<string, string> = {};\n        if (!formData.machineType) newErrors.machineType = \"Required\";\n        if (formData.noOfMachines !== undefined && formData.noOfMachines <= 0) {\n            newErrors.noOfMachines = \"Machines must be positive\";\n        }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = <K extends keyof StitchingMachineData> (field: K, value: StitchingMachineData[K]) => {\n        setFormData({ ...formData, [field]: value });\n        if (errors[field]) {\n            setErrors((prev) => ({ ...prev, [field]: \"\" }));\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validate()) {\n            setMachinery(formData);\n            setFormData({\n                machineType: \"Single Needle (singer)\",\n                noOfMachines: 1,\n            });\n            onCancel();\n        }\n    };\n\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                    Add Stitching Machine\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"text-gray-600 hover:text-gray-800 p-2 rounded-full hover:bg-gray-100 transition-colors\"\n                    title=\"Cancel\"\n                >\n                    <svg\n                        className=\"w-5 h-5\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Machine Type */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Machine Type <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                        value={formData.machineType}\n                        onChange={(e) =>\n                            handleChange(\n                                \"machineType\",\n                                e.target.value as StitchingMachineData[\"machineType\"]\n                            )\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                        {machineTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                    {errors.machineType && (\n                        <p className=\"text-sm text-red-500\">{errors.machineType}</p>\n                    )}\n                </div>\n\n                {/* No of Machines */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-semibold text-gray-700\">\n                        Number of Machines\n                    </label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={formData.noOfMachines || \"\"}\n                        onChange={(e) =>\n                            handleChange(\"noOfMachines\", Number(e.target.value))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    />\n                    {errors.noOfMachines && (\n                        <p className=\"text-sm text-red-500\">{errors.noOfMachines}</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    className=\"px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 font-medium transition-colors\"\n                >\n                    Cancel\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors\"\n                >\n                    Add Machine\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default StitchingMachine;\n"],"names":[],"mappings":";;;;;AAAA;;;;AAqBA,MAAM,mBAAoD;QAAC,EACI,SAAS,EACT,YAAY,EACZ,QAAQ,EACX;;IACxD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EACpC,aAAa;QACT,aAAa;QACb,cAAc;IAClB;IAGJ,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAyB,CAAC;IAE9D,MAAM,eAAsD;QACxD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;IAED,MAAM,WAAW;QACb,MAAM,YAAoC,CAAC;QAC3C,IAAI,CAAC,SAAS,WAAW,EAAE,UAAU,WAAW,GAAG;QACnD,IAAI,SAAS,YAAY,KAAK,aAAa,SAAS,YAAY,IAAI,GAAG;YACnE,UAAU,YAAY,GAAG;QAC7B;QACA,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC7C;IAEA,MAAM,eAAe,CAAwC,OAAU;QACnE,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,MAAM,EAAE;QAAM;QAC1C,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAAM,EAAE;gBAAG,CAAC;QACjD;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,YAAY;YACZ,aAAa;YACb,YAAY;gBACR,aAAa;gBACb,cAAc;YAClB;YACA;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;wBACV,OAAM;kCAEN,cAAA,6LAAC;4BACG,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,6LAAC;gCACG,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAMlB,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;;oCAA4C;kDAC5C,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEhD,6LAAC;gCACG,OAAO,SAAS,WAAW;gCAC3B,UAAU,CAAC,IACP,aACI,eACA,EAAE,MAAM,CAAC,KAAK;gCAGtB,WAAU;0CAET,aAAa,GAAG,CAAC,CAAC,qBACf,6LAAC;wCAAkB,OAAO;kDACrB;uCADQ;;;;;;;;;;4BAKpB,OAAO,WAAW,kBACf,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,WAAW;;;;;;;;;;;;kCAK/D,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,WAAU;0CAA4C;;;;;;0CAG7D,6LAAC;gCACG,MAAK;gCACL,KAAI;gCACJ,OAAO,SAAS,YAAY,IAAI;gCAChC,UAAU,CAAC,IACP,aAAa,gBAAgB,OAAO,EAAE,MAAM,CAAC,KAAK;gCAEtD,WAAU;;;;;;4BAEb,OAAO,YAAY,kBAChB,6LAAC;gCAAE,WAAU;0CAAwB,OAAO,YAAY;;;;;;;;;;;;;;;;;;0BAMpE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;kCAGD,6LAAC;wBACG,MAAK;wBACL,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GAnJM;KAAA;uCAqJS","debugId":null}},
    {"offset": {"line": 6061, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/CheckingMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\n// Define a loose shape for the props instead of using `any`\ninterface CheckingMachineData {\n    // Add real fields later when the form is developed\n    [key: string]: unknown;\n}\n\ninterface CheckingMachineProps {\n    machinery?: CheckingMachineData;\n    setMachinery: (machine: CheckingMachineData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CheckingMachine: React.FC<CheckingMachineProps> = ({machinery, setMachinery, onCancel}) => {\n    return (\n\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Checking Machine</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default CheckingMachine;\n"],"names":[],"mappings":";;;;;;AAaA,6DAA6D;AAC7D,MAAM,kBAAkD;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAC;IACxF,qBAEI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAuB;;;;;;;;;;;;;AAMzE;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 6118, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/IronPackingMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface IronPackingMachineData {\n    // Add real fields later when the form is developed\n    [key: string]: unknown;\n}\ninterface IronPackingMachineProps {\n    machinery?: IronPackingMachineData; // optional because schema is empty\n    setMachinery: (machine: IronPackingMachineData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst IronPackingMachine: React.FC<IronPackingMachineProps> = ({machinery, setMachinery, onCancel}) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Iron & Packing</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default IronPackingMachine;\n"],"names":[],"mappings":";;;;;;AAWA,6DAA6D;AAC7D,MAAM,qBAAwD;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAC;IAC9F,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAqB;;;;;;;;;;;;;AAMvE;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 6175, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/KajaButtonMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface KajaButtonMachineData{\n    [ket:string]: unknown;\n}\ninterface KajaButtonMachineProps {\n    machinery?: KajaButtonMachineData; // optional because schema is empty\n    setMachinery: (machine: KajaButtonMachineData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst KajaButtonMachine: React.FC<KajaButtonMachineProps> = ({machinery, setMachinery, onCancel,}) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Iron & Packing</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default KajaButtonMachine;\n"],"names":[],"mappings":";;;;;;AAUA,6DAA6D;AAC7D,MAAM,oBAAsD;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE;IAC7F,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAqB;;;;;;;;;;;;;AAMvE;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 6232, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/MultiNeedleDoubleChainMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface MultiNeedleDoubleChainData {\n    [key: string]: unknown;\n}\ninterface MultiNeedleDoubleChainProps {\n    machinery?: MultiNeedleDoubleChainData; // optional because schema is empty\n    setMachinery: (machine: MultiNeedleDoubleChainData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst MultiNeedleDoubleChainMachine: React.FC<MultiNeedleDoubleChainProps> = ({machinery, setMachinery, onCancel,\n                                                           }) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Multi needle /Doublechain</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default MultiNeedleDoubleChainMachine;\n"],"names":[],"mappings":";;;;;;AAUA,6DAA6D;AAC7D,MAAM,gCAAuE;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EACpD;IACxD,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAgC;;;;;;;;;;;;;AAMlF;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 6289, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/OilRemovingMendingCenterMachineForm.tsx"],"sourcesContent":["import React from \"react\";\ninterface OilRemovingMendingCenterData {\n    [key: string]: unknown;\n}\ninterface OilRemovingMendingCenterProps {\n    machinery?: OilRemovingMendingCenterData; // optional because schema is empty\n    setMachinery: (machine: OilRemovingMendingCenterData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst OilRemovingMendingCenterMachine: React.FC<OilRemovingMendingCenterProps> = ({machinery, setMachinery, onCancel,}) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Oil Removing/ Mending Center</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default OilRemovingMendingCenterMachine;\n"],"names":[],"mappings":";;;;;;AASA,6DAA6D;AAC7D,MAAM,kCAA2E;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE;IAClH,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAmC;;;;;;;;;;;;;AAMrF;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 6346, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/PatternMakinigCenterMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface PatternMakingCenterMachineData{\n    [key: string]: unknown;\n}\ninterface PatternMakingCenterMachineProps {\n    machinery?: PatternMakingCenterMachineData; // optional because schema is empty\n    setMachinery: (machine: PatternMakingCenterMachineData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst PatternMakingCenterMachine: React.FC<PatternMakingCenterMachineProps> = ({machinery, setMachinery, onCancel,\n                                                             }) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Iron & Packing</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default PatternMakingCenterMachine;\n"],"names":[],"mappings":";;;;;;AAUA,6DAA6D;AAC7D,MAAM,6BAAwE;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EACnD;IAC1D,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAqB;;;;;;;;;;;;;AAMvE;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 6403, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/FilmScreenMakingCenterMachineForm.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface FilmScreenMakingCenterMachineData{\n    [key: string]: unknown;\n}\ninterface FilmScreenMakingCenterMachineProps {\n    machinery?: FilmScreenMakingCenterMachineData; // optional because schema is empty\n    setMachinery: (machine: FilmScreenMakingCenterMachineData) => void;\n    onCancel: () => void;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst FilmScreenMakingCenterMachine: React.FC<FilmScreenMakingCenterMachineProps> = ({machinery, setMachinery, onCancel,\n                                                                               }) => {\n    return (\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 space-y-6 text-center\">\n            <h3 className=\"text-xl font-semibold text-gray-800\">\n                Checking Machine Setup\n            </h3>\n            <p className=\"text-gray-600\">\n                The <span className=\"font-medium\">Iron & Packing</span> form is still\n                under development. You can skip this step for now and continue with\n                other configurations.\n            </p>\n        </div>\n    );\n};\n\nexport default FilmScreenMakingCenterMachine;\n"],"names":[],"mappings":";;;;;;AAUA,6DAA6D;AAC7D,MAAM,gCAA8E;QAAC,EAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,EACvC;IAC5E,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAE,WAAU;;oBAAgB;kCACrB,6LAAC;wBAAK,WAAU;kCAAc;;;;;;oBAAqB;;;;;;;;;;;;;AAMvE;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 6460, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/Forms/index.tsx"],"sourcesContent":["import KnittingMachine from \"./KnittinngMachineForm\";\nimport YarnSpinningMachine from \"./YarnSpinningMachineForm\";\nimport YarnProcessingMachine from \"./YarnProcessingMachineForm\";\nimport WeavingMachine from \"./WeavingMachineForm\";\nimport DyeingMachine from \"./DyeingMachineForm\";\nimport FabricProcessingMachine from \"./FabricProcessingMachineForm\";\nimport FabricFinishingMachine from \"./FabricFinishingMachineForm\";\nimport WashingMachine from \"./WashingMachineForm\";\nimport CuttingMachine from \"./CuttingMachineForm\";\nimport ComputerizedEmbroideryMachine from \"./ComputerizedEmbroideryMachineForm\";\nimport ManualEmbroideryMachine from \"./ManualEmbroideryMachineForm\";\nimport FusingMachine from \"./FusingMachineForm\";\nimport PrintingMachine from \"./PrintingMachineForm\";\nimport StitchingMachine from \"./StitchingMachineForm\";\nimport CheckingMachine from \"./CheckingMachineForm\";\nimport IronPackingMachine from \"./IronPackingMachineForm\";\nimport KajaButtonMachine from \"./KajaButtonMachineForm\";\nimport MultiNeedleDoubleChainMachine from \"./MultiNeedleDoubleChainMachineForm\";\nimport OilRemovingMendingCenterMachine from \"./OilRemovingMendingCenterMachineForm\";\nimport PatternMakinigCenterMachine from \"./PatternMakinigCenterMachineForm\";\nimport FilmScreenMakingCenterMachine from \"./FilmScreenMakingCenterMachineForm\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const MachineryForms: Record<string, React.ComponentType<any>> = {\n\n    YARN_SPINNING: YarnSpinningMachine,\n    YARN_PROCESSING:YarnProcessingMachine,\n    WEAVING_UNIT:WeavingMachine,\n    KNITTING_UNIT: KnittingMachine,\n    DYEING_UNIT:DyeingMachine,\n    FABRIC_PROCESSING_UNIT:FabricProcessingMachine,\n    FABRIC_FINISHING_UNIT:FabricFinishingMachine,\n    WASHING_UNIT:WashingMachine,\n    CUTTING_UNIT:CuttingMachine,\n    COMPUTERIZED_EMBROIDERY_UNIT:ComputerizedEmbroideryMachine,\n    MANUAL_EMBROIDERY_UNIT:ManualEmbroideryMachine,\n    FUSING_UNIT:FusingMachine,\n    PRINTING_UNIT:PrintingMachine,\n    STITCHING_UNIT:StitchingMachine,\n    CHECKING_UNIT:CheckingMachine,\n    IRONING_PACKING_UNIT:IronPackingMachine,\n    KAJA_BUTTON_UNIT:KajaButtonMachine,\n    MULTI_NEEDLE_DOUBLE_CHAIN_UNIT:MultiNeedleDoubleChainMachine,\n    OIL_REMOVING_MENDING_CENTER:OilRemovingMendingCenterMachine,\n    PATTERN_MAKING_CENTER:PatternMakinigCenterMachine,\n    FILM_SCREEN_MAKING_CENTER:FilmScreenMakingCenterMachine\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,iBAA2D;IAEpE,eAAe,oKAAmB;IAClC,iBAAgB,sKAAqB;IACrC,cAAa,+JAAc;IAC3B,eAAe,iKAAe;IAC9B,aAAY,8JAAa;IACzB,wBAAuB,wKAAuB;IAC9C,uBAAsB,uKAAsB;IAC5C,cAAa,+JAAc;IAC3B,cAAa,+JAAc;IAC3B,8BAA6B,8KAA6B;IAC1D,wBAAuB,wKAAuB;IAC9C,aAAY,8JAAa;IACzB,eAAc,gKAAe;IAC7B,gBAAe,iKAAgB;IAC/B,eAAc,gKAAe;IAC7B,sBAAqB,mKAAkB;IACvC,kBAAiB,kKAAiB;IAClC,gCAA+B,8KAA6B;IAC5D,6BAA4B,gLAA+B;IAC3D,uBAAsB,4KAA2B;IACjD,2BAA0B,8KAA6B;AAC3D","debugId":null}},
    {"offset": {"line": 6536, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/MachineryStep.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport {MachineryForms} from \"@/components/Forms\";\nexport type MachineData = string | number | boolean | MachineData[] | { [key: string]: MachineData };\ntype Props = {\n    form: {\n        unitType: string;\n        machinery: MachineData[];\n    };\n    setForm: (updates: Partial<{ machinery: MachineData[] }>) => void;\n    onNext: () => void;\n    onBack: () => void;\n};\n\n// Simple machine preview component\nconst MachinePreview = ({ machine, index, onDelete }: {\n    machine: MachineData;\n    index: number;\n    onDelete: (index: number) => void;\n}) => {\n    // Get random subset of fields to display\n    const getDisplayFields = () => {\n        if (typeof machine === \"object\" && machine !== null && !Array.isArray(machine)) {\n            const entries = Object.entries(machine);\n            const displayItems: string[] = [];\n\n            // Take up to 3-4 fields for display\n            entries.slice(0, 4).forEach(([key, value]) => {\n                // Format the key nicely\n                const formattedKey = key\n                    .replace(/([A-Z])/g, ' $1')\n                    .replace(/_/g, ' ')\n                    .trim()\n                    .split(' ')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n                    .join(' ');\n\n                // Format the value\n                let formattedValue = String(value);\n                if (typeof value === 'object' && value !== null) {\n                    formattedValue = Array.isArray(value) ? `[${value.length} items]` : '{...}';\n                }\n\n                // Add to display items\n                if (formattedValue && formattedValue !== 'null' && formattedValue !== 'undefined') {\n                    displayItems.push(`${formattedKey}: ${formattedValue}`);\n                }\n            });\n\n            return displayItems.join(' • ');\n        }\n        return `Machine ${index + 1}`;\n    };\n\n    return (\n        <div className=\"flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg hover:bg-gray-100 transition-colors\">\n            <div className=\"flex items-center gap-3 flex-1\">\n                <div className=\"w-8 h-8 bg-blue-100 rounded flex items-center justify-center flex-shrink-0\">\n                    <span className=\"text-blue-600 font-semibold text-sm\">{index + 1}</span>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-700 truncate\">\n                        {getDisplayFields()}\n                    </p>\n                </div>\n            </div>\n            <button\n                onClick={() => onDelete(index)}\n                className=\"ml-2 p-1.5 text-red-500 hover:bg-red-50 rounded transition-colors flex-shrink-0\"\n                title=\"Remove machine\"\n            >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n    );\n};\n\nexport default function MachineryStep({ form, setForm, onNext, onBack }: Props) {\n    const [errors, setErrors] = useState<string>(\"\");\n    const [machineCardOpen, setMachineCardOpen] = useState(false);\n\n    const onNextClicked = () => {\n        setErrors(\"\");\n        onNext();\n    };\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n\n    const handleAddMachine = (machine: any) => {\n        setForm({ machinery: [...form.machinery, machine] });\n        setMachineCardOpen(false);\n    };\n\n    const handleDeleteMachine = (index: number) => {\n        const updatedMachinery = form.machinery.filter((_, i) => i !== index);\n        setForm({ machinery: updatedMachinery });\n    };\n\n    useEffect(()=>{\n        setForm({ machinery: [] });\n    },[form.unitType,setForm])\n\n    const onCancel = () => setMachineCardOpen(false);\n\n    const MachineForm = MachineryForms[form.unitType];\n\n    return (\n        <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-bold mb-4\">\n                Add {form.unitType.replace(/_/g, ' ')} Machines\n            </h2>\n\n            <button\n                onClick={() => setMachineCardOpen(true)}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n                Add Machine\n            </button>\n\n            {machineCardOpen && MachineForm && (\n                <MachineForm onCancel={onCancel} setMachinery={handleAddMachine} />\n            )}\n\n            {errors && <p className=\"text-red-500 text-sm\">{errors}</p>}\n\n            {/* Machine preview list */}\n            {form.machinery.length > 0 && (\n                <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-semibold text-gray-800\">Machines Added ({form.machinery.length})</h4>\n                    </div>\n                    <div className=\"space-y-2\">\n                        {form.machinery.map((machine, i) => (\n                            <MachinePreview\n                                key={i}\n                                machine={machine}\n                                index={i}\n                                onDelete={handleDeleteMachine}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            <div className=\"flex justify-between pt-6\">\n                <button\n                    onClick={onBack}\n                    className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n                >\n                    Back\n                </button>\n                <button\n                    onClick={onNextClicked}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;;AAEA;AAEA;;;AAJA;;;AAgBA,mCAAmC;AACnC,MAAM,iBAAiB;QAAC,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAIjD;IACG,yCAAyC;IACzC,MAAM,mBAAmB;QACrB,IAAI,OAAO,YAAY,YAAY,YAAY,QAAQ,CAAC,MAAM,OAAO,CAAC,UAAU;YAC5E,MAAM,UAAU,OAAO,OAAO,CAAC;YAC/B,MAAM,eAAyB,EAAE;YAEjC,oCAAoC;YACpC,QAAQ,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;oBAAC,CAAC,KAAK,MAAM;gBACrC,wBAAwB;gBACxB,MAAM,eAAe,IAChB,OAAO,CAAC,YAAY,OACpB,OAAO,CAAC,MAAM,KACd,IAAI,GACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW,IACpE,IAAI,CAAC;gBAEV,mBAAmB;gBACnB,IAAI,iBAAiB,OAAO;gBAC5B,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;oBAC7C,iBAAiB,MAAM,OAAO,CAAC,SAAS,AAAC,IAAgB,OAAb,MAAM,MAAM,EAAC,aAAW;gBACxE;gBAEA,uBAAuB;gBACvB,IAAI,kBAAkB,mBAAmB,UAAU,mBAAmB,aAAa;oBAC/E,aAAa,IAAI,CAAC,AAAC,GAAmB,OAAjB,cAAa,MAAmB,OAAf;gBAC1C;YACJ;YAEA,OAAO,aAAa,IAAI,CAAC;QAC7B;QACA,OAAO,AAAC,WAAoB,OAAV,QAAQ;IAC9B;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAK,WAAU;sCAAuC,QAAQ;;;;;;;;;;;kCAEnE,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAE,WAAU;sCACR;;;;;;;;;;;;;;;;;0BAIb,6LAAC;gBACG,SAAS,IAAM,SAAS;gBACxB,WAAU;gBACV,OAAM;0BAEN,cAAA,6LAAC;oBAAI,WAAU;oBAAU,MAAK;oBAAO,QAAO;oBAAe,SAAQ;8BAC/D,cAAA,6LAAC;wBAAK,eAAc;wBAAQ,gBAAe;wBAAQ,aAAa;wBAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;AAKzF;KA9DM;AAgES,SAAS,cAAc,KAAwC;QAAxC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAS,GAAxC;;IAClC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAS;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAC;IAEvD,MAAM,gBAAgB;QAClB,UAAU;QACV;IACJ;IACA,qDAAqD,GAErD,MAAM,mBAAmB,CAAC;QACtB,QAAQ;YAAE,WAAW;mBAAI,KAAK,SAAS;gBAAE;aAAQ;QAAC;QAClD,mBAAmB;IACvB;IAEA,MAAM,sBAAsB,CAAC;QACzB,MAAM,mBAAmB,KAAK,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;QAC/D,QAAQ;YAAE,WAAW;QAAiB;IAC1C;IAEA,IAAA,0KAAS;mCAAC;YACN,QAAQ;gBAAE,WAAW,EAAE;YAAC;QAC5B;kCAAE;QAAC,KAAK,QAAQ;QAAC;KAAQ;IAEzB,MAAM,WAAW,IAAM,mBAAmB;IAE1C,MAAM,cAAc,yJAAc,CAAC,KAAK,QAAQ,CAAC;IAEjD,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;;oBAAyB;oBAC9B,KAAK,QAAQ,CAAC,OAAO,CAAC,MAAM;oBAAK;;;;;;;0BAG1C,6LAAC;gBACG,SAAS,IAAM,mBAAmB;gBAClC,WAAU;0BACb;;;;;;YAIA,mBAAmB,6BAChB,6LAAC;gBAAY,UAAU;gBAAU,cAAc;;;;;;YAGlD,wBAAU,6LAAC;gBAAE,WAAU;0BAAwB;;;;;;YAG/C,KAAK,SAAS,CAAC,MAAM,GAAG,mBACrB,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAG,WAAU;;gCAA8B;gCAAiB,KAAK,SAAS,CAAC,MAAM;gCAAC;;;;;;;;;;;;kCAEvF,6LAAC;wBAAI,WAAU;kCACV,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,kBAC1B,6LAAC;gCAEG,SAAS;gCACT,OAAO;gCACP,UAAU;+BAHL;;;;;;;;;;;;;;;;0BAUzB,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;kCAGD,6LAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GAlFwB;MAAA","debugId":null}},
    {"offset": {"line": 6820, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/components/ServiceStep.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, ChangeEvent } from \"react\";\n\ntype Service = {\n    title: string;\n    description: string;\n};\n\ntype Props = {\n    form: {\n        services: Service[];\n    };\n    setForm: (updates: Partial<{ services: Service[] }>) => void;\n    onBack: () => void;\n    onSubmit: () => void;\n};\n\nexport default function ServiceStep({ form, setForm, onBack, onSubmit }: Props) {\n    const [service, setService] = useState<Service>({ title: \"\", description: \"\" });\n    const [errors, setErrors] = useState<string>(\"\");\n    const [showAddForm, setShowAddForm] = useState(false);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { name, value } = e.target;\n        setService({ ...service, [name]: value });\n        if (errors) setErrors(\"\"); // Clear errors when user starts typing\n    };\n\n    const addService = () => {\n        if (!service.title?.trim()) {\n            setErrors(\"Service title is required\");\n            return;\n        }\n        setForm({ services: [...form.services, service] });\n        setService({ title: \"\", description: \"\" });\n        setErrors(\"\");\n        setShowAddForm(false);\n    };\n\n    const removeService = (indexToRemove: number) => {\n        const updatedServices = form.services.filter((_, index) => index !== indexToRemove);\n        setForm({ services: updatedServices });\n    };\n\n    const editService = (indexToEdit: number) => {\n        const serviceToEdit = form.services[indexToEdit];\n        setService(serviceToEdit);\n        removeService(indexToEdit);\n        setShowAddForm(true);\n    };\n\n    const cancelAdd = () => {\n        setService({ title: \"\", description: \"\" });\n        setErrors(\"\");\n        setShowAddForm(false);\n    };\n\n    return (\n        <div className=\"max-w-4xl p-10 rounded-lg mx-auto bg-white\">\n            {/* Header */}\n            <div className=\"mb-8\">\n                <div className=\"flex items-center justify-between mb-4\">\n                    <div>\n                        <h2 className=\"text-2xl font-bold text-gray-900\">Services Offered</h2>\n                        <p className=\"text-sm text-gray-600 mt-1\">Add the services your company provides to clients</p>\n                    </div>\n                    <div className=\"text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full\">\n                        Step 3 / 3\n                    </div>\n                </div>\n            </div>\n\n            {/* Add Service Button */}\n            {!showAddForm && (\n                <div className=\"mb-6\">\n                    <button\n                        type=\"button\"\n                        onClick={() => setShowAddForm(true)}\n                        className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-xl hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200 shadow-sm\"\n                    >\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                        </svg>\n                        Add Service\n                    </button>\n                </div>\n            )}\n\n            {/* Add Service Form */}\n            {showAddForm && (\n                <div className=\"bg-white border border-gray-200 rounded-2xl p-6 mb-6 shadow-sm\">\n                    <div className=\"flex items-center justify-between mb-6\">\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Add New Service</h3>\n                        <button\n                            type=\"button\"\n                            onClick={cancelAdd}\n                            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                        >\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        </button>\n                    </div>\n\n                    <div className=\"flex flex-col gap-6\">\n                        {/* Service Title */}\n                        <div className=\"lg:col-span-1\">\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Service Title <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                name=\"title\"\n                                value={service.title || \"\"}\n                                onChange={handleChange}\n                                placeholder=\"e.g., Custom Knitting, Yarn Dyeing\"\n                                className={`w-full px-4 py-3 border rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors ${\n                                    errors ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                                }`}\n                            />\n                        </div>\n\n                        {/* Description */}\n                        <div className=\"lg:col-span-1\">\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Description <span className=\"text-gray-400 text-xs\">(optional)</span>\n                            </label>\n                            <textarea\n                                name=\"description\"\n                                value={service.description || \"\"}\n                                onChange={handleChange}\n                                rows={3}\n                                placeholder=\"Brief description of the service...\"\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Error Message */}\n                    {errors && (\n                        <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                            <p className=\"text-sm text-red-600 flex items-center\">\n                                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                </svg>\n                                {errors}\n                            </p>\n                        </div>\n                    )}\n\n                    {/* Add Service Action Buttons */}\n                    <div className=\"flex justify-end gap-3 mt-6\">\n                        <button\n                            type=\"button\"\n                            onClick={cancelAdd}\n                            className=\"px-6 py-2.5 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors font-medium\"\n                        >\n                            Cancel\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={addService}\n                            className=\"px-6 py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium shadow-sm\"\n                        >\n                            Add Service\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {/* Services Added Section */}\n            <div className=\"mb-8\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Services Added: <span className=\"text-blue-600 ml-1\">({form.services.length})</span>\n                </h3>\n\n                {form.services.length === 0 ? (\n                    <div className=\"text-center py-12 bg-gray-50 rounded-2xl border border-dashed border-gray-300\">\n                        <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                        </svg>\n                        <p className=\"text-gray-500 text-lg mb-2\">No services added yet</p>\n                        <p className=\"text-gray-400 text-sm\">Click  `&quot; Add Service  `&quot; to get started</p>\n                    </div>\n                ) : (\n                    <div className=\"grid gap-4\">\n                        {form.services.map((s, idx) => (\n                            <div\n                                key={idx}\n                                className=\"bg-white border border-gray-200 rounded-xl p-5 hover:shadow-md transition-shadow group\"\n                            >\n                                <div className=\"flex items-start justify-between\">\n                                    <div className=\"flex-1\">\n                                        <div className=\"flex items-center mb-2\">\n                                            <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-3\"></div>\n                                            <h4 className=\"font-semibold text-gray-900 text-lg\">{s.title}</h4>\n                                        </div>\n                                        {s.description && (\n                                            <p className=\"text-gray-600 ml-5 leading-relaxed\">{s.description}</p>\n                                        )}\n                                    </div>\n                                    <div className=\"flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity ml-4\">\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => editService(idx)}\n                                            className=\"p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                                            title=\"Edit service\"\n                                        >\n                                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n                                            </svg>\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => removeService(idx)}\n                                            className=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                                            title=\"Remove service\"\n                                        >\n                                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            {/* Navigation Buttons */}\n            <div className=\"flex justify-between pt-6 border-t border-gray-200\">\n                <button\n                    type=\"button\"\n                    onClick={onBack}\n                    className=\"inline-flex items-center px-6 py-3 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors font-medium\"\n                >\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                    Back\n                </button>\n\n                <button\n                    type=\"button\"\n                    onClick={onSubmit}\n                    disabled={form.services.length === 0}\n                    className={`inline-flex items-center px-8 py-3 text-white font-medium rounded-xl focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors shadow-sm ${\n                        form.services.length === 0\n                            ? 'bg-gray-400 cursor-not-allowed'\n                            : 'bg-green-600 hover:bg-green-700 focus:ring-green-500'\n                    }`}\n                >\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    Submit Application\n                </button>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7504, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/app/dashboard/onboard-company/page.tsx"],"sourcesContent":["// app/dashboard/onboard-company/page.tsx\n\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Toaster, toast } from \"sonner\";\nimport CompanyStep from \"../../../components/CompanyStep\";\nimport MachineryStep, {MachineData} from \"../../../components/MachineryStep\";\nimport ServiceStep from \"../../../components/ServiceStep\";\nimport {BACKEND_SERVICE_URL} from \"../../../../config\";\nimport { useRouter } from \"next/navigation\";\n\ntype Step = \"company\" | \"machinery\" | \"service\";\n\ninterface LocationData {\n\n    latitude: number;\n    longitude: number;\n}\n\nexport interface FormDataType {\n    name: string;\n    contactNumber: string;\n    gstNumber: string;\n    aboutCompany: string;\n    workType: string;\n    unitType: string;\n    unitSqFeet: string;\n    certifications: string[];\n    companyLogo: File | null;\n    unitImages: File[];\n    location: LocationData | null;\n    machinery: MachineData[] // you can type more strictly later\n    services: { title: string; description: string }[];\n}\nconst initialFormData: FormDataType = {\n    name: \"\",\n    contactNumber: \"\",\n    gstNumber: \"\",\n    aboutCompany: \"\",\n    workType: \"\",\n    unitType: \"\",\n    unitSqFeet: \"\",\n    certifications: [],\n    companyLogo: null,\n    unitImages: [],\n    location: null,\n    machinery: [],\n    services: [],\n}\n\nexport default function OnboardCompanyPage() {\n    const router = useRouter();\n    const [step, setStep] = useState<Step>(\"company\");\n    const [form, setForm] = useState<FormDataType>(initialFormData);\n    const [loading, setLoading] = useState(false);\n\n    const nextStep = () => {\n\n        if (step === \"company\") setStep(\"machinery\");\n        else if (step === \"machinery\") setStep(\"service\");\n    };\n\n    const prevStep = () => {\n        if (step === \"service\") setStep(\"machinery\");\n        else if (step === \"machinery\") setStep(\"company\");\n    };\n\n    const handleSubmit = async () => {\n        // optionally validate final requirement\n\n        if (!form.name || !form.contactNumber || !form.unitType || !form.workType) {\n            toast.error(\"Please fill all required company details\");\n            setStep(\"company\");\n            return;\n        }\n\n        setLoading(true);\n        try {\n            const fd = new FormData();\n            fd.append(\"name\", form.name);\n            fd.append(\"contactNumber\", form.contactNumber);\n            fd.append(\"gstNumber\", form.gstNumber);\n            fd.append(\"aboutCompany\", form.aboutCompany);\n            fd.append(\"workType\", form.workType);\n            fd.append(\"unitType\", form.unitType);\n            fd.append(\"unitSqFeet\", form.unitSqFeet);\n\n            form.certifications.forEach((c) => {\n                fd.append(\"certifications\", c);\n            });\n\n            if (form.companyLogo) {\n                fd.append(\"companyLogo\", form.companyLogo);\n            }\n\n            form.unitImages.forEach((file) => {\n                fd.append(\"unitImages\", file);\n            });\n\n            if (form.location) {\n                fd.append(\"location\", JSON.stringify(form.location));\n            }\n\n            fd.append(\"machinery\", JSON.stringify(form.machinery));\n            fd.append(\"services\", JSON.stringify(form.services));\n\n\n            const resp = await fetch(`${BACKEND_SERVICE_URL}/companies/onboard`, {\n                method: \"POST\",\n                credentials: \"include\",\n                body: fd,\n            });\n\n            const data = await resp.json();\n            if (resp.ok) {\n                toast.success(\"Company onboarded successfully\");\n                setStep(\"company\")\n                setForm(initialFormData)\n                router.refresh()\n\n                // maybe reset or redirect\n            } else {\n                toast.error(data.message || \"Failed to onboard\");\n            }\n        } catch (err) {\n            console.error(\"Submit error:\", err);\n            toast.error(\"Something went wrong\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"max-w-3xl mx-auto p-6\">\n            <Toaster richColors />\n            <div className=\"mb-4\">\n                <p>Step {step === \"company\" ? 1 : step === \"machinery\" ? 2 : 3} / 3</p>\n            </div>\n\n            {step === \"company\" && (\n                <CompanyStep\n                    form={form}\n                    setForm={(updates) => setForm((prev) => ({ ...prev, ...updates }))}\n                    onNext={nextStep}\n                />\n            )}\n            {step === \"machinery\" && (\n                <MachineryStep\n                    form={form}\n                    setForm={(updates) => setForm((prev) => ({ ...prev, ...updates }))}\n                    onBack={prevStep}\n                    onNext={nextStep}\n                />\n            )}\n            {step === \"service\" && (\n                <ServiceStep\n                    form={form}\n                    setForm={(updates) => setForm((prev) => ({ ...prev, ...updates }))}\n                    onBack={prevStep}\n                    onSubmit={handleSubmit}\n                />\n            )}\n\n            {loading && <p className=\"mt-4 text-center\">Submitting...</p>}\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}