{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/config.ts"],"sourcesContent":["export const  BACKEND_SERVICE_URL=\"http://localhost:3000\""],"names":[],"mappings":";;;;AAAO,MAAO,sBAAoB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\nimport { BACKEND_SERVICE_URL } from \"../config\";\n\nconst protectedRoutes = [\"/dashboard\", \"/admin\"];\n\nexport async function middleware(req: NextRequest) {\n    const { pathname, searchParams } = req.nextUrl;\n    const token = req.cookies.get(\"token\")?.value;\n\n    // 1. Ignore Next.js internals and RSC fetches\n    if (\n        pathname.startsWith(\"/_next\") ||\n        pathname.startsWith(\"/api\") ||\n        searchParams.has(\"_rsc\") // ⬅️ IMPORTANT\n    ) {\n        return NextResponse.next();\n    }\n\n    // 2. Only redirect \"/\" → \"/dashboard\" on a *real page load*, not internal fetches\n    if (pathname === \"/\" && token) {\n        return NextResponse.redirect(new URL(\"/dashboard\", req.url));\n    }\n\n    // 3. Protect dashboard/admin\n    if (protectedRoutes.some((p) => pathname.startsWith(p))) {\n        if (!token) {\n            return NextResponse.redirect(new URL(\"/\", req.url));\n        }\n\n        try {\n            const res = await fetch(`${BACKEND_SERVICE_URL}/auth/admin`, {\n                headers: { cookie: `token=${token}` },\n                cache: \"no-store\",\n            });\n\n            if (!res.ok) {\n                return NextResponse.redirect(new URL(\"/\", req.url));\n            }\n        } catch {\n            return NextResponse.redirect(new URL(\"/\", req.url));\n        }\n    }\n\n    return NextResponse.next();\n}\n\n// Only run middleware for \"real\" app routes\nexport const config = {\n    matcher: [\"/((?!_next|.*\\\\..*|api).*)\"],\n};\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAEA;;;AAEA,MAAM,kBAAkB;IAAC;IAAc;CAAS;AAEzC,eAAe,WAAW,GAAgB;IAC7C,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAI,OAAO;IAC9C,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IAExC,8CAA8C;IAC9C,IACI,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,WACpB,aAAa,GAAG,CAAC,QAAQ,eAAe;MAC1C;QACE,OAAO,gMAAY,CAAC,IAAI;IAC5B;IAEA,kFAAkF;IAClF,IAAI,aAAa,OAAO,OAAO;QAC3B,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,GAAG;IAC9D;IAEA,6BAA6B;IAC7B,IAAI,gBAAgB,IAAI,CAAC,CAAC,IAAM,SAAS,UAAU,CAAC,KAAK;QACrD,IAAI,CAAC,OAAO;YACR,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACrD;QAEA,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,qIAAmB,CAAC,WAAW,CAAC,EAAE;gBACzD,SAAS;oBAAE,QAAQ,CAAC,MAAM,EAAE,OAAO;gBAAC;gBACpC,OAAO;YACX;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACT,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;YACrD;QACJ,EAAE,OAAM;YACJ,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACrD;IACJ;IAEA,OAAO,gMAAY,CAAC,IAAI;AAC5B;AAGO,MAAM,SAAS;IAClB,SAAS;QAAC;KAA6B;AAC3C"}}]
}