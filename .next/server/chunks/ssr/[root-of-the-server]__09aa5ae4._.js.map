{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/public/logo.svg.mjs%20%28structured%20image%20object%20with%20data%20url%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 507, height: 84, blurWidth: 0, blurHeight: 0};\n"],"names":[],"mappings":";;;;AAAA;;uCACe;IAAE,KAAA,kHAAG;IAAE,OAAO;IAAK,QAAQ;IAAI,WAAW;IAAG,YAAY;AAAC","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/config.ts"],"sourcesContent":["export const  BACKEND_SERVICE_URL=\"http://localhost:3000\""],"names":[],"mappings":";;;;AAAO,MAAO,sBAAoB","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/services/auth.ts"],"sourcesContent":["import {BACKEND_SERVICE_URL} from \"../../config\";\n\nexport async function login(email: string, password: string) {\n    const res = await fetch(`${BACKEND_SERVICE_URL}/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n        credentials: \"include\", // <--- send cookie\n    });\n\n    if (!res.ok) {\n        const data = await res.json().catch(() => null);\n        throw new Error(data?.message || \"Login failed\");\n    }\n\n    return res.json();\n}\n\nexport async function logout() {\n    await fetch(`${BACKEND_SERVICE_URL}/auth/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n    });\n}\n\nexport async function getMe() {\n    const res = await fetch(`${BACKEND_SERVICE_URL}/auth/admin`, {\n        credentials: \"include\",\n    });\n\n    if (!res.ok) throw new Error(\"Not authenticated\");\n    return res.json();\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEO,eAAe,MAAM,KAAa,EAAE,QAAgB;IACvD,MAAM,MAAM,MAAM,MAAM,GAAG,6HAAmB,CAAC,WAAW,CAAC,EAAE;QACzD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAS;QACvC,aAAa;IACjB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,MAAM,IAAI,MAAM,MAAM,WAAW;IACrC;IAEA,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe;IAClB,MAAM,MAAM,GAAG,6HAAmB,CAAC,YAAY,CAAC,EAAE;QAC9C,QAAQ;QACR,aAAa;IACjB;AACJ;AAEO,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM,GAAG,6HAAmB,CAAC,WAAW,CAAC,EAAE;QACzD,aAAa;IACjB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACnB","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/store/useAuthStore.ts"],"sourcesContent":["// store/useAuthStore.ts\nimport { create } from \"zustand\";\nimport * as authService from \"@/services/auth\";\n\ntype User = { email: string; role: string };\n\ntype AuthState = {\n    user: User | null;\n    loading: boolean;\n    error: string | null;\n    login: (email: string, password: string) => Promise<void>;\n    logout: () => Promise<void>;\n    fetchUser: () => Promise<void>;\n};\n\nexport const useAuthStore = create<AuthState>((set, get) => ({\n    user: null,\n    loading: false,\n    error: null,\n\n    // Helper for error handling\n    setError: (err: unknown) => {\n        const message = err instanceof Error ? err.message : \"Something went wrong\";\n        set({ error: message });\n    },\n\n    login: async (email, password) => {\n        if (get().loading) return; // prevent multiple requests\n        set({ loading: true, error: null });\n\n        try {\n            await authService.login(email, password); // backend sets HttpOnly cookie\n            const user = await authService.getMe();\n            set({ user });\n        } catch (err: unknown) {\n            const message = err instanceof Error ? err.message : \"Login failed\";\n            set({ error: message });\n        } finally {\n            set({ loading: false });\n        }\n    },\n\n    logout: async () => {\n        try {\n            await authService.logout();\n        } finally {\n            set({ user: null });\n        }\n    },\n\n    fetchUser: async () => {\n        try {\n            const user = await authService.getMe();\n            set({ user, error: null });\n        } catch {\n            set({ user: null });\n        }\n    },\n}));\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB;AACA;;;AAaO,MAAM,eAAe,IAAA,kJAAM,EAAY,CAAC,KAAK,MAAQ,CAAC;QACzD,MAAM;QACN,SAAS;QACT,OAAO;QAEP,4BAA4B;QAC5B,UAAU,CAAC;YACP,MAAM,UAAU,eAAe,QAAQ,IAAI,OAAO,GAAG;YACrD,IAAI;gBAAE,OAAO;YAAQ;QACzB;QAEA,OAAO,OAAO,OAAO;YACjB,IAAI,MAAM,OAAO,EAAE,QAAQ,4BAA4B;YACvD,IAAI;gBAAE,SAAS;gBAAM,OAAO;YAAK;YAEjC,IAAI;gBACA,MAAM,gIAAiB,CAAC,OAAO,WAAW,+BAA+B;gBACzE,MAAM,OAAO,MAAM,gIAAiB;gBACpC,IAAI;oBAAE;gBAAK;YACf,EAAE,OAAO,KAAc;gBACnB,MAAM,UAAU,eAAe,QAAQ,IAAI,OAAO,GAAG;gBACrD,IAAI;oBAAE,OAAO;gBAAQ;YACzB,SAAU;gBACN,IAAI;oBAAE,SAAS;gBAAM;YACzB;QACJ;QAEA,QAAQ;YACJ,IAAI;gBACA,MAAM,iIAAkB;YAC5B,SAAU;gBACN,IAAI;oBAAE,MAAM;gBAAK;YACrB;QACJ;QAEA,WAAW;YACP,IAAI;gBACA,MAAM,OAAO,MAAM,gIAAiB;gBACpC,IAAI;oBAAE;oBAAM,OAAO;gBAAK;YAC5B,EAAE,OAAM;gBACJ,IAAI;oBAAE,MAAM;gBAAK;YACrB;QACJ;IACJ,CAAC","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/provenworks/Desktop/Knitinexus/admin-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\"\nimport Image from \"next/image\";\nimport logo from '../../public/logo.svg';\nimport {useAuthStore} from \"@/store/useAuthStore\";\nimport {useEffect, useState} from \"react\";\nimport {usePathname, useRouter} from \"next/navigation\";\nexport default function Home() {\n\nconst {login, loading , error , user,fetchUser }= useAuthStore();\n\n    interface CompanyForm {\n        email: string;\n        password: string;\n        // add all fields your form collects\n    }\n\n    const [form, setForm] = useState<CompanyForm>({\n        email: \"\",\n        password: \"\",\n    });\n\n    const router = useRouter();\nconst pathname=usePathname()\n    useEffect(() => {\n        fetchUser();\n    }, [fetchUser]);\n\n    // Redirect if logged in\n    useEffect(() => {\n        if (user && pathname === \"/\") {\n            router.push(\"/dashboard\");\n        }\n    }, [user, pathname,router]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n        setForm(prev => ({ ...prev, [e.target.id]: e.target.value }));\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        await login(form.email, form.password);\n    };\n\n  return  (\n        <div className=\"flex text-black min-h-screen flex-col md:flex-row\">\n            {/* Left Section */}\n            <div className=\"flex flex-1 flex-col justify-center bg-gray-50 p-8\">\n                <div className=\"mb-8\">\n                   <Image  alt={\"logo\"} src={logo}></Image>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">\n                    Login into the  App\n                </h1>\n                <p className=\"mt-2 text-gray-500\">\n                    Admin access only. Please sign in to continue.\n                </p>\n            </div>\n\n            {/* Right Section */}\n            <div className=\"flex flex-1 items-center justify-center bg-white p-8 shadow-md\">\n                <div className=\"w-full max-w-sm\">\n                    <h2 className=\"mb-6 text-xl font-semibold text-gray-700\">\n                        Admin Login\n                    </h2>\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        <div>\n                            <label\n                                htmlFor=\"email\"\n                                className=\"block text-sm font-medium text-gray-600\"\n                            >\n                                Email\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                onChange={handleChange}\n                                required\n                                disabled={loading}\n                                value={form.email}\n                                className=\"mt-1 w-full rounded-lg border border-gray-300 p-2 focus:border-indigo-500 focus:ring focus:ring-indigo-200\"\n                                placeholder=\"you@example.com\"\n                            />\n                        </div>\n                        <div>\n                            <label\n\n                                htmlFor=\"password\"\n                                className=\"block text-sm font-medium text-gray-600\"\n                            >\n                                Password\n                            </label>\n                            <input\n                                onChange={handleChange}\n                                value={form.password}\n                                type=\"password\"\n                                disabled={loading}\n                                required\n                                id=\"password\"\n                                className=\"mt-1 w-full rounded-lg border border-gray-300 p-2 focus:border-indigo-500 focus:ring focus:ring-indigo-200\"\n                                placeholder=\"••••••••\"\n                            />\n                        </div>\n                        {/* Show error */}\n                        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n                        {loading && <p className=\"text-gray-500 mt-2\">Please wait...</p>}\n\n                        <button\n                            disabled={loading}\n\n                            type=\"submit\"\n                            className=\"w-full rounded-lg bg-indigo-600 p-2 text-white hover:bg-indigo-700\"\n                        >\n                            {loading ? \"Logging in...\" : \"Login\"}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;AAMe,SAAS;IAExB,MAAM,EAAC,KAAK,EAAE,OAAO,EAAG,KAAK,EAAG,IAAI,EAAC,SAAS,EAAE,GAAE,IAAA,4IAAY;IAQ1D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAc;QAC1C,OAAO;QACP,UAAU;IACd;IAEA,MAAM,SAAS,IAAA,+IAAS;IAC5B,MAAM,WAAS,IAAA,iJAAW;IACtB,IAAA,kNAAS,EAAC;QACN;IACJ,GAAG;QAAC;KAAU;IAEd,wBAAwB;IACxB,IAAA,kNAAS,EAAC;QACN,IAAI,QAAQ,aAAa,KAAK;YAC1B,OAAO,IAAI,CAAC;QAChB;IACJ,GAAG;QAAC;QAAM;QAAS;KAAO;IAE1B,MAAM,eAAe,CAAC,IAClB,QAAQ,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;YAAC,CAAC;IAE/D,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,MAAM,MAAM,KAAK,KAAK,EAAE,KAAK,QAAQ;IACzC;IAEF,qBACM,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;kCACZ,cAAA,8OAAC,wIAAK;4BAAE,KAAK;4BAAQ,KAAK,wRAAI;;;;;;;;;;;kCAEjC,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCAGjD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAMtC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAGzD,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CACpC,8OAAC;;sDACG,8OAAC;4CACG,SAAQ;4CACR,WAAU;sDACb;;;;;;sDAGD,8OAAC;4CACG,MAAK;4CACL,IAAG;4CACH,UAAU;4CACV,QAAQ;4CACR,UAAU;4CACV,OAAO,KAAK,KAAK;4CACjB,WAAU;4CACV,aAAY;;;;;;;;;;;;8CAGpB,8OAAC;;sDACG,8OAAC;4CAEG,SAAQ;4CACR,WAAU;sDACb;;;;;;sDAGD,8OAAC;4CACG,UAAU;4CACV,OAAO,KAAK,QAAQ;4CACpB,MAAK;4CACL,UAAU;4CACV,QAAQ;4CACR,IAAG;4CACH,WAAU;4CACV,aAAY;;;;;;;;;;;;gCAInB,uBAAS,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;gCAC3C,yBAAW,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAE9C,8OAAC;oCACG,UAAU;oCAEV,MAAK;oCACL,WAAU;8CAET,UAAU,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzD","debugId":null}}]
}